stages:
  - build
  - deploy
  - run
  - run2
  - test
  - fasktest

variables:
  IMAGE_NAME: aestoolscelad/flask-app-baha:v4.0


build:
  stage: build
  tags:
    - python-shell

  retry: 2
  script:
    - docker compose down

    - docker compose build
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[build\]/'
      when: on_success
    - when: never

deploy:
  stage: deploy
  tags:
    - python-shell

  retry: 2
  script:
    - docker compose down
    - docker compose up -d --remove-orphans
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[deploy\]/'
      when: on_success
    - when: never
run_flask_extern:
  stage: run
  tags:
    - python-shell


  before_script:
    - cd ServeurFlaskHost
    - python -m venv venv
    - venv\Scripts\Activate.ps1
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - Start-Process -NoNewWindow -FilePath "python" -ArgumentList "flaskhost.py"
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[run\]/'
      when: on_success

    - when: never

run_tests:
  stage: test
  tags:
    - python-shell


  before_script:
    - python -m venv venv
    - venv\Scripts\Activate.ps1
    - python -m pip install --upgrade pip
    - pip install robotframework
    - pip install requests
  script:
    - python execution.py
  retry: 2
  artifacts:
    paths:
      - results/Tests_*.zip
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[test\]/'
      when: on_success
    - when: never

run_flask_and_test:
  stage: run2
  tags:
    - python-shell
  variables:
    SHELL: "powershell"  # Force l'utilisation de PowerShell Core


  before_script:
    - cd ServeurFlaskHost
    - python -m venv venv
    - ./venv/Scripts/Activate.ps1  # Format correct pour pwsh
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install robotframework requests

  script:
    - |
      $flaskProcess = Start-Process -FilePath "python" -ArgumentList "flaskhost.py" -PassThru -NoNewWindow -RedirectStandardOutput "flask.log" -RedirectStandardError "flask_error.log"
      $flaskProcess.Id | Out-File flask_pid.txt
      Start-Sleep -Seconds 5
      mkdir -Force resultats2
      docker exec pfeproject-flask-1 mkdir -p /app/resultats
      docker exec pfeproject-flask-1 python execution.py --list   MisesAJourAndReseau.robot 
      Start-Sleep -Seconds 10
      docker cp pfeproject-flask-1:/app/resultats/. ./resultats2/
      
      # Vérifier le contenu du dossier resultats2
      Write-Host "Contenu du dossier resultats2:"
      Get-ChildItem -Path ./resultats2 -Recurse
      
      # Créer un fichier de test pour vérifier que le dossier est accessible
      "Test file" | Out-File -FilePath "./resultats2/test.txt"
      
      Stop-Process -Id $flaskProcess.Id -Force -ErrorAction SilentlyContinue

  retry: 2
  artifacts:
    paths:
      - resultats2/
      - ServeurFlaskHost/flask.log
      - ServeurFlaskHost/flask_error.log  # Pour le débogage
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /\[run2\]/'
      when: on_success
    - when: never




