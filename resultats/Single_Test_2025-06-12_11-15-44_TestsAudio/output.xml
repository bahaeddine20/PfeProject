<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.12.5 on win32)" generated="2025-06-12T11:15:44.638515" rpa="false" schemaversion="5">
<suite id="s1" name="TestsAudio" source="C:\Users\bahae\Documents\PfeProject\test_cases\TestsAudio.robot">
<kw name="Démarrer Driver" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:15:48.039503" level="INFO">Tentative d'initialisation du driver Appium...</msg>
<arg>Tentative d'initialisation du driver Appium...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:15:48.039503" elapsed="0.000521"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:15:48.040024" level="INFO">URL Appium: C:\Users\bahae\Documents\PfeProject\test_cases\..\config.py</msg>
<arg>URL Appium: C:\\Users\\bahae\\Documents\\PfeProject\\test_cases${/}..${/}config.py</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:15:48.040024" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Setup Driver" owner="Integration">
<arg>${Device}</arg>
<doc>Initialise et retourne le driver Appium.</doc>
<status status="PASS" start="2025-06-12T11:15:48.040024" elapsed="4.336133"/>
</kw>
<msg time="2025-06-12T11:15:52.376157" level="INFO">${result} = ('PASS', &lt;appium.webdriver.webdriver.WebDriver (session="d40fea9a-d760-47d3-9086-0182b4047839")&gt;)</msg>
<var>${result}</var>
<arg>setup driver</arg>
<arg>${Device}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2025-06-12T11:15:48.040024" elapsed="4.336133"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T11:15:52.376157" level="INFO">${status} = PASS</msg>
<msg time="2025-06-12T11:15:52.376157" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="d40fea9a-d760-47d3-9086-0182b4047839")&gt;</msg>
<var>${status}</var>
<var>${driver}</var>
<arg>${result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T11:15:52.376157" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'FAIL'">
<kw name="Log" owner="BuiltIn">
<arg>Échec de l'initialisation du driver: ${driver}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-12T11:15:52.376157" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Impossible d'initialiser le driver Appium: ${driver}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-12T11:15:52.376157" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-12T11:15:52.376157" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-12T11:15:52.376157" elapsed="0.000949"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T11:15:52.377106" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="d40fea9a-d760-47d3-9086-0182b4047839")&gt;</msg>
<arg>${driver}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T11:15:52.377106" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:15:52.377106" level="INFO">Driver Appium initialisé avec succès</msg>
<arg>Driver Appium initialisé avec succès</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:15:52.377106" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:15:48.038968" elapsed="4.338138"/>
</kw>
<test id="s1-t1" name="Test fgdya" line="236">
<kw name="Close Activity Robot" owner="Integration">
<msg time="2025-06-12T11:15:53.613277" level="INFO">Échec de terminateApp: Message: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
Stacktrace:
BadParametersError: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
    at checkParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:155:9)
    at validateExecuteMethodParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:242:5)
    at AndroidUiautomator2Driver.executeMethod (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\commands\execute.ts:34:45)
    at AndroidUiautomator2Driver.execute (C:\Users\bahae\.appium\node_modules\appium-uiautomator2-driver\node_modules\appium-android-driver\lib\commands\execute.js:17:23)
    at runCommandPromise (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:115:20)
    at C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:171:12
    at AsyncLock._promiseTry (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:306:31)
    at exec (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:170:9)
    at AsyncLock.acquire (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:189:3)
    at AndroidUiautomator2Driver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:159:39)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at defaultBehavior (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:787:14)
    at AppiumDriver.executeWrappedCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:900:16)
    at AppiumDriver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:799:17)
    at asyncHandler (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:387:19)
Touche HOME pressée
Application com.example.audioapplicationtest fermée avec force-stop
Application com.example.audioapplicationtest fermée avec succès</msg>
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest</arg>
<doc>Version de close_activity adaptée pour Robot Framework.
Utilise plusieurs méthodes pour s'assurer que l'application est bien fermée.</doc>
<status status="PASS" start="2025-06-12T11:15:52.377106" elapsed="1.236171"/>
</kw>
<status status="PASS" start="2025-06-12T11:15:52.377106" elapsed="1.236171"/>
</test>
<test id="s1-t2" name="Test Audio Recording And Playback" line="239">
<kw name="Close Activity" owner="Integration">
<msg time="2025-06-12T11:15:53.619369" level="INFO">Erreur lors de la fermeture de l'application com.example.audioapplicationtest/.AudioPlayerActivity: Message: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
Stacktrace:
BadParametersError: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
    at checkParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:155:9)
    at validateExecuteMethodParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:242:5)
    at AndroidUiautomator2Driver.executeMethod (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\commands\execute.ts:34:45)
    at AndroidUiautomator2Driver.execute (C:\Users\bahae\.appium\node_modules\appium-uiautomator2-driver\node_modules\appium-android-driver\lib\commands\execute.js:17:23)
    at runCommandPromise (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:115:20)
    at C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:171:12
    at AsyncLock._promiseTry (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:306:31)
    at exec (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:170:9)
    at AsyncLock.acquire (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:189:3)
    at AndroidUiautomator2Driver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:159:39)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at defaultBehavior (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:787:14)
    at AppiumDriver.executeWrappedCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:900:16)
    at AppiumDriver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:799:17)
    at asyncHandler (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:387:19)</msg>
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<doc>Ferme une application spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-12T11:15:53.614263" elapsed="0.005106"/>
</kw>
<kw name="Execute Test With Retry">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T11:15:53.620999" level="INFO">${attempt} = 1</msg>
<var>${attempt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T11:15:53.620369" elapsed="0.000630"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T11:15:53.620999" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${FALSE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T11:15:53.620999" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Verify Audio Recording">
<kw name="Initialize Language Settings">
<kw name="Get System Language" owner="Integration">
<msg time="2025-06-12T11:15:53.664931" level="INFO">${lang} = eng</msg>
<var>${lang}</var>
<arg>${Device}</arg>
<status status="PASS" start="2025-06-12T11:15:53.620999" elapsed="0.043932"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-06-12T11:15:53.665935" level="INFO">${lang_dict} = {'System': 'System', 'Setting': 'Settings', 'Audio': 'Recording', 'Record': 'START', 'Stop': 'STOP', 'Play': 'Play'}</msg>
<var>${lang_dict}</var>
<arg>'${lang}' == 'fr'</arg>
<arg>${LANG_FR}</arg>
<arg>${LANG_EN}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-06-12T11:15:53.664931" elapsed="0.001004"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T11:15:53.665935" level="INFO">${LANG_DICT} = {'System': 'System', 'Setting': 'Settings', 'Audio': 'Recording', 'Record': 'START', 'Stop': 'STOP', 'Play': 'Play'}</msg>
<arg>${LANG_DICT}</arg>
<arg>${lang_dict}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T11:15:53.665935" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:15:53.620999" elapsed="0.044936"/>
</kw>
<kw name="Navigate To Audio App">
<kw name="Start Activity Code" owner="Integration">
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.MainActivity</arg>
<doc>Lance une activité spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-12T11:15:53.665935" elapsed="0.062747"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:15:56.728900" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:15:53.728682" elapsed="3.000218"/>
</kw>
<kw name="Print Activity" owner="Integration">
<msg time="2025-06-12T11:15:56.820849" level="INFO">${current_activity} = com.example.audioapplicationtest/.MainActivity</msg>
<var>${current_activity}</var>
<arg>${driver}</arg>
<doc>Retourne l'activité complète sous la forme 'com.android.car.messenger/.ui.launcher.MessageLauncherActivity'.</doc>
<status status="PASS" start="2025-06-12T11:15:56.728900" elapsed="0.091949"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${current_activity}</arg>
<arg>com.example.audioapplicationtest/.MainActivity</arg>
<arg>L'application n'est pas correctement lancée</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-12T11:15:56.820849" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:15:53.665935" elapsed="3.154914"/>
</kw>
<kw name="Start Audio Recording And Playback">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:15:56.821855" level="INFO">Démarrage de l'enregistrement audio...</msg>
<arg>Démarrage de l'enregistrement audio...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:15:56.821855" elapsed="0.000000"/>
</kw>
<kw name="Get Audio File Duration">
<kw name="Get Audio Duration" owner="Integration">
<msg time="2025-06-12T11:15:56.822946" level="INFO">✅ Durée du fichier audio C:\Users\bahae\Documents\PfeProject\test_cases\test.wav: 18.31 secondes</msg>
<msg time="2025-06-12T11:15:56.823496" level="INFO">${duration} = 18.311836734693877</msg>
<var>${duration}</var>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Obtient la durée d'un fichier audio en secondes.</doc>
<status status="PASS" start="2025-06-12T11:15:56.821855" elapsed="0.001641"/>
</kw>
<kw name="Should Not Be Equal As Numbers" owner="BuiltIn">
<msg time="2025-06-12T11:15:56.823496" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<arg>${duration}</arg>
<arg>0</arg>
<arg>Impossible d'obtenir la durée du fichier audio</arg>
<doc>Fails if objects are equal after converting them to real numbers.</doc>
<status status="PASS" start="2025-06-12T11:15:56.823496" elapsed="0.000000"/>
</kw>
<return>
<value>${duration}</value>
<status status="PASS" start="2025-06-12T11:15:56.823496" elapsed="0.000000"/>
</return>
<msg time="2025-06-12T11:15:56.823496" level="INFO">${duration} = 18.311836734693877</msg>
<var>${duration}</var>
<arg>${audio_file}</arg>
<status status="PASS" start="2025-06-12T11:15:56.821855" elapsed="0.001641"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:15:56.824112" level="INFO">Durée du fichier audio à lire: 18.311836734693877 secondes</msg>
<arg>Durée du fichier audio à lire: ${duration} secondes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:15:56.823496" elapsed="0.000633"/>
</kw>
<kw name="Click Record Button">
<kw name="Wait For Record Button">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check Element Exists" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-12T11:15:56.824129" elapsed="0.637838"/>
</kw>
<arg>${timeout}</arg>
<arg>${QUICK_WAIT}</arg>
<arg>Check Element Exists</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2025-06-12T11:15:56.824129" elapsed="0.637838"/>
</kw>
<status status="PASS" start="2025-06-12T11:15:56.824129" elapsed="0.637838"/>
</kw>
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-12T11:15:57.515526" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-12T11:15:57.461967" elapsed="0.053559"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton START n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:15:57.515526" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-12T11:15:57.515526" elapsed="0.477551"/>
</kw>
<msg time="2025-06-12T11:15:57.993077" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:15:57.515526" elapsed="0.477551"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton START</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:15:57.993077" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:15:56.824129" elapsed="1.168948"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:15:59.994747" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:15:57.994169" elapsed="2.000578"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Play Audio" owner="Integration">
<msg time="2025-06-12T11:16:18.423750" level="INFO">✅ Lecture audio réussie : Lecture du fichier test.wav terminée</msg>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Joue un fichier audio via l'API Flask.</doc>
<status status="PASS" start="2025-06-12T11:15:59.994747" elapsed="18.429003"/>
</kw>
<msg time="2025-06-12T11:16:18.423750" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>play_audio</arg>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:15:59.994747" elapsed="18.429003"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>La lecture audio a échoué</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:16:18.423750" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:16:36.737353" level="INFO">Slept 18 seconds 312 milliseconds.</msg>
<arg>${duration}s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:16:18.423750" elapsed="18.313603"/>
</kw>
<kw name="Click Stop Button">
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-12T11:16:36.804543" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-12T11:16:36.737353" elapsed="0.067190"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton STOP n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:16:36.804543" elapsed="0.000984"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-12T11:16:36.805527" elapsed="0.476091"/>
</kw>
<msg time="2025-06-12T11:16:37.281618" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:16:36.805527" elapsed="0.476091"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton STOP</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:16:37.281618" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:16:36.737353" elapsed="0.544265"/>
</kw>
<status status="PASS" start="2025-06-12T11:15:56.820849" elapsed="40.460769"/>
</kw>
<kw name="Compare Audio Files">
<kw name="Compare With Latest Recorded" owner="TestAudio">
<msg time="2025-06-12T11:17:14.264859" level="INFO">Graphiques sauvegardés dans: resultats\Single_Test_2025-06-12_11-15-44_TestsAudio\plots\audio_comparison_enregistrement_20250612_111658.png</msg>
<msg time="2025-06-12T11:17:14.264859" level="INFO">============================= Début du test audio ==============================
Original: C:\Users\bahae\Documents\PfeProject\test_cases\test.wav
Enregistré: latest_download.wav
Date du test: 2025-06-12 11:16:39

Original - Durée: 18.31s -&gt; Segment actif: 18.31s
Enregistré - Durée: 39.25s -&gt; Segment actif: 18.16s
Recherche du meilleur alignement...
Alignement initial trouvé, ajustement fin...

Détails de l'alignement:
Position originale: 0.000s
Position enregistrée: -0.039s
Ajustement: -38.5ms
Corrélation initiale: 0.325
Original length: 802609, Recorded length: 802609
Best lag: 0 samples (0.000 seconds)
Final lengths - Original: 802609, Aligned: 802609
Décalage temporel final: 0.000 secondes

=== Résultats ===
Décalage temporel: 0.000 secondes
         snr: -1.0233
 correlation: 0.3254
         mse: 0.0414
        rmse: 0.2035
energy_ratio: 0.8741
    max_diff: 1.2393
   mean_diff: 0.1458
         mos: 2.9495
     clarity: 1.0052
  clarity_db: 0.0223

=== Résultat: ÉCHEC ===
SNR: -1.02 dB (seuil: -1 dB)
Corrélation: 0.325 (seuil: 0.4)
MOS: 2.95/5 (seuil: 3.0)
Clarté: 1.005 (seuil: 0.8)</msg>
<msg time="2025-06-12T11:17:14.264859" level="INFO">C:\Users\bahae\Documents\PfeProject\test_cases\TestAudio.py:339: UserWarning: Glyph 10060 (\N{CROSS MARK}) missing from font(s) DejaVu Sans.
  plt.savefig(output_file, dpi=300, bbox_inches='tight')</msg>
<msg time="2025-06-12T11:17:14.264859" level="INFO">${test_passed} = False</msg>
<msg time="2025-06-12T11:17:14.265899" level="INFO">${metrics} = {'snr': -1.023277275552282, 'correlation': 0.3253702818986411, 'mse': 0.041428389428364326, 'rmse': 0.20353965075229033, 'energy_ratio': 0.8740848272830153, 'max_diff': 1.2392913209867171, 'mean_diff'...</msg>
<var>${test_passed}</var>
<var>${metrics}</var>
<arg>${original_audio}</arg>
<doc>Télécharge le dernier audio enregistré via l'API Flask et le compare à l'original.
:param original_audio: Chemin du fichier original (wav)
:param latest_audio_path: Chemin où sauvegarder le fichier téléchargé
:param api_url: URL de l'API Flask pour récupérer le dernier audio enregistré
:return: (test_passed, metrics)</doc>
<status status="PASS" start="2025-06-12T11:16:37.282618" elapsed="36.983281"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.265899" level="INFO">SNR: -1.023277275552282 dB</msg>
<arg>SNR: ${metrics['snr']} dB</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:17:14.265899" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.266953" level="INFO">Corrélation: 0.3253702818986411 (seuil: 0.4)</msg>
<arg>Corrélation: ${metrics['correlation']} (seuil: 0.4)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:17:14.265899" elapsed="0.001054"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.266953" level="INFO">MOS: 2.949513247256278/5 (seuil: 3.0)</msg>
<arg>MOS: ${metrics['mos']}/5 (seuil: 3.0)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:17:14.266953" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.266953" level="INFO">Clarté: 1.0051506965744144 (seuil: 0.8)</msg>
<arg>Clarté: ${metrics['clarity']} (seuil: 0.8)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:17:14.266953" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.267979" level="INFO">${correlation_ok} = False</msg>
<var>${correlation_ok}</var>
<arg>${metrics['correlation']} &gt;= 0.4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:17:14.266953" elapsed="0.001026"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.269085" level="INFO">${mos_ok} = False</msg>
<var>${mos_ok}</var>
<arg>${metrics['mos']} &gt;= 3.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:17:14.267979" elapsed="0.001106"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.269085" level="INFO">${clarity_ok} = True</msg>
<var>${clarity_ok}</var>
<arg>${metrics['clarity']} &gt;= 0.8</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:17:14.269085" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.269085" level="INFO">${test_passed} = False</msg>
<var>${test_passed}</var>
<arg>${correlation_ok} and ${mos_ok} and ${clarity_ok}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:17:14.269085" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="not ${test_passed}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.270685" level="INFO">❌ Test échoué - Métriques critiques non satisfaites</msg>
<arg>❌ Test échoué - Métriques critiques non satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:17:14.270089" elapsed="0.000596"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.270685" level="FAIL">Test audio échoué - Vérifiez les métriques dans les logs</msg>
<arg>Test audio échoué - Vérifiez les métriques dans les logs</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-12T11:17:14.270685" elapsed="0.000000">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<status status="FAIL" start="2025-06-12T11:17:14.269085" elapsed="0.001600">Test audio échoué - Vérifiez les métriques dans les logs</status>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Test réussi - Toutes les métriques sont satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-12T11:17:14.270685" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-12T11:17:14.270685" elapsed="0.000000"/>
</branch>
<status status="FAIL" start="2025-06-12T11:17:14.269085" elapsed="0.001600">Test audio échoué - Vérifiez les métriques dans les logs</status>
</if>
<return>
<value>${test_passed}</value>
<value>${metrics}</value>
<status status="NOT RUN" start="2025-06-12T11:17:14.270685" elapsed="0.000000"/>
</return>
<var>${result}</var>
<arg>${DEFAULT_OUTPUT_FILE}</arg>
<status status="FAIL" start="2025-06-12T11:16:37.282618" elapsed="36.988067">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>Résultat de la comparaison: ${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-12T11:17:14.270685" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2025-06-12T11:15:53.620999" elapsed="80.649686">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<msg time="2025-06-12T11:17:14.270685" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:15:53.620999" elapsed="80.649686"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} réussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-12T11:17:14.271756" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="NOT RUN" start="2025-06-12T11:17:14.271756" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-12T11:17:14.270685" elapsed="0.001071"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.271756" level="INFO">${attempt} = 2</msg>
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:17:14.271756" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:17:14.271756" level="INFO">Test Test Audio Recording And Playback échoué - Tentative 2/2</msg>
<arg>Test ${test_name} échoué - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:17:14.271756" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:17:16.272511" level="INFO">Slept 2 seconds.</msg>
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:17:14.271756" elapsed="2.000755"/>
</kw>
<status status="PASS" start="2025-06-12T11:17:14.271756" elapsed="2.000755"/>
</branch>
<status status="PASS" start="2025-06-12T11:17:14.271756" elapsed="2.000755"/>
</if>
<status status="PASS" start="2025-06-12T11:17:14.271756" elapsed="2.000755"/>
</branch>
<status status="PASS" start="2025-06-12T11:17:14.270685" elapsed="2.001826"/>
</if>
<var name="${index}">0</var>
<status status="PASS" start="2025-06-12T11:15:53.620999" elapsed="82.651512"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Verify Audio Recording">
<kw name="Initialize Language Settings">
<kw name="Get System Language" owner="Integration">
<msg time="2025-06-12T11:17:16.316638" level="INFO">${lang} = eng</msg>
<var>${lang}</var>
<arg>${Device}</arg>
<status status="PASS" start="2025-06-12T11:17:16.273594" elapsed="0.044096"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-06-12T11:17:16.317690" level="INFO">${lang_dict} = {'System': 'System', 'Setting': 'Settings', 'Audio': 'Recording', 'Record': 'START', 'Stop': 'STOP', 'Play': 'Play'}</msg>
<var>${lang_dict}</var>
<arg>'${lang}' == 'fr'</arg>
<arg>${LANG_FR}</arg>
<arg>${LANG_EN}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-06-12T11:17:16.317690" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-12T11:17:16.317690" level="INFO">${LANG_DICT} = {'System': 'System', 'Setting': 'Settings', 'Audio': 'Recording', 'Record': 'START', 'Stop': 'STOP', 'Play': 'Play'}</msg>
<arg>${LANG_DICT}</arg>
<arg>${lang_dict}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-12T11:17:16.317690" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:17:16.273594" elapsed="0.044096"/>
</kw>
<kw name="Navigate To Audio App">
<kw name="Start Activity Code" owner="Integration">
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.MainActivity</arg>
<doc>Lance une activité spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-12T11:17:16.318428" elapsed="0.068502"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:17:19.388336" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:17:16.387958" elapsed="3.000378"/>
</kw>
<kw name="Print Activity" owner="Integration">
<msg time="2025-06-12T11:17:19.486977" level="INFO">${current_activity} = com.example.audioapplicationtest/.MainActivity</msg>
<var>${current_activity}</var>
<arg>${driver}</arg>
<doc>Retourne l'activité complète sous la forme 'com.android.car.messenger/.ui.launcher.MessageLauncherActivity'.</doc>
<status status="PASS" start="2025-06-12T11:17:19.388336" elapsed="0.098641"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${current_activity}</arg>
<arg>com.example.audioapplicationtest/.MainActivity</arg>
<arg>L'application n'est pas correctement lancée</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-12T11:17:19.487559" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:17:16.318412" elapsed="3.169147"/>
</kw>
<kw name="Start Audio Recording And Playback">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:17:19.487559" level="INFO">Démarrage de l'enregistrement audio...</msg>
<arg>Démarrage de l'enregistrement audio...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:17:19.487559" elapsed="0.000000"/>
</kw>
<kw name="Get Audio File Duration">
<kw name="Get Audio Duration" owner="Integration">
<msg time="2025-06-12T11:17:19.488612" level="INFO">✅ Durée du fichier audio C:\Users\bahae\Documents\PfeProject\test_cases\test.wav: 18.31 secondes</msg>
<msg time="2025-06-12T11:17:19.488612" level="INFO">${duration} = 18.311836734693877</msg>
<var>${duration}</var>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Obtient la durée d'un fichier audio en secondes.</doc>
<status status="PASS" start="2025-06-12T11:17:19.488612" elapsed="0.000000"/>
</kw>
<kw name="Should Not Be Equal As Numbers" owner="BuiltIn">
<msg time="2025-06-12T11:17:19.488612" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<arg>${duration}</arg>
<arg>0</arg>
<arg>Impossible d'obtenir la durée du fichier audio</arg>
<doc>Fails if objects are equal after converting them to real numbers.</doc>
<status status="PASS" start="2025-06-12T11:17:19.488612" elapsed="0.001004"/>
</kw>
<return>
<value>${duration}</value>
<status status="PASS" start="2025-06-12T11:17:19.489616" elapsed="0.000000"/>
</return>
<msg time="2025-06-12T11:17:19.489616" level="INFO">${duration} = 18.311836734693877</msg>
<var>${duration}</var>
<arg>${audio_file}</arg>
<status status="PASS" start="2025-06-12T11:17:19.487559" elapsed="0.002057"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:17:19.489616" level="INFO">Durée du fichier audio à lire: 18.311836734693877 secondes</msg>
<arg>Durée du fichier audio à lire: ${duration} secondes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:17:19.489616" elapsed="0.000000"/>
</kw>
<kw name="Click Record Button">
<kw name="Wait For Record Button">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check Element Exists" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-12T11:17:19.489616" elapsed="0.051762"/>
</kw>
<arg>${timeout}</arg>
<arg>${QUICK_WAIT}</arg>
<arg>Check Element Exists</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2025-06-12T11:17:19.489616" elapsed="0.051762"/>
</kw>
<status status="PASS" start="2025-06-12T11:17:19.489616" elapsed="0.051762"/>
</kw>
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-12T11:17:19.585918" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-12T11:17:19.541378" elapsed="0.044540"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton START n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:17:19.585918" elapsed="0.001098"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-12T11:17:19.587016" elapsed="0.504169"/>
</kw>
<msg time="2025-06-12T11:17:20.091185" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:17:19.587016" elapsed="0.504169"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton START</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:17:20.092177" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:17:19.489616" elapsed="0.602561"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:17:22.092736" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:17:20.092177" elapsed="2.000559"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Play Audio" owner="Integration">
<msg time="2025-06-12T11:17:40.505911" level="INFO">✅ Lecture audio réussie : Lecture du fichier test.wav terminée</msg>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Joue un fichier audio via l'API Flask.</doc>
<status status="PASS" start="2025-06-12T11:17:22.092736" elapsed="18.413175"/>
</kw>
<msg time="2025-06-12T11:17:40.505911" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>play_audio</arg>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:17:22.092736" elapsed="18.413175"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>La lecture audio a échoué</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:17:40.505911" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:17:58.818409" level="INFO">Slept 18 seconds 312 milliseconds.</msg>
<arg>${duration}s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:17:40.505911" elapsed="18.312498"/>
</kw>
<kw name="Click Stop Button">
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-12T11:17:58.879598" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-12T11:17:58.818409" elapsed="0.061189"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton STOP n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:17:58.879598" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-12T11:17:58.879598" elapsed="0.462278"/>
</kw>
<msg time="2025-06-12T11:17:59.341876" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:17:58.879598" elapsed="0.462278"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton STOP</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:17:59.341876" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:17:58.818409" elapsed="0.524563"/>
</kw>
<status status="PASS" start="2025-06-12T11:17:19.487559" elapsed="39.855413"/>
</kw>
<kw name="Compare Audio Files">
<kw name="Compare With Latest Recorded" owner="TestAudio">
<msg time="2025-06-12T11:18:29.599911" level="INFO">Graphiques sauvegardés dans: resultats\Single_Test_2025-06-12_11-15-44_TestsAudio\plots\audio_comparison_enregistrement_20250612_111819.png</msg>
<msg time="2025-06-12T11:18:29.599911" level="INFO">============================= Début du test audio ==============================
Original: C:\Users\bahae\Documents\PfeProject\test_cases\test.wav
Enregistré: latest_download.wav
Date du test: 2025-06-12 11:18:01

Original - Durée: 18.31s -&gt; Segment actif: 18.31s
Enregistré - Durée: 39.25s -&gt; Segment actif: 18.17s
Recherche du meilleur alignement...
Alignement initial trouvé, ajustement fin...

Détails de l'alignement:
Position originale: 0.000s
Position enregistrée: -0.038s
Ajustement: -38.2ms
Corrélation initiale: 0.600
Original length: 802967, Recorded length: 802967
Best lag: 1 samples (0.000 seconds)
Final lengths - Original: 802966, Aligned: 802966
Décalage temporel final: 0.000 secondes

=== Résultats ===
Décalage temporel: 0.000 secondes
         snr: 1.2614
 correlation: 0.6013
         mse: 0.0245
        rmse: 0.1565
energy_ratio: 0.8691
    max_diff: 1.2270
   mean_diff: 0.1032
         mos: 3.3720
     clarity: 1.0176
  clarity_db: 0.0758

=== Résultat: SUCCÈS ===
SNR: 1.26 dB (seuil: -1 dB)
Corrélation: 0.601 (seuil: 0.4)
MOS: 3.37/5 (seuil: 3.0)
Clarté: 1.018 (seuil: 0.8)</msg>
<msg time="2025-06-12T11:18:29.599911" level="INFO">C:\Users\bahae\Documents\PfeProject\test_cases\TestAudio.py:339: UserWarning: Glyph 9989 (\N{WHITE HEAVY CHECK MARK}) missing from font(s) DejaVu Sans.
  plt.savefig(output_file, dpi=300, bbox_inches='tight')</msg>
<msg time="2025-06-12T11:18:29.599911" level="INFO">${test_passed} = True</msg>
<msg time="2025-06-12T11:18:29.599911" level="INFO">${metrics} = {'snr': 1.261424760235737, 'correlation': 0.6013172099418913, 'mse': 0.024499235261736647, 'rmse': 0.1565223155391481, 'energy_ratio': 0.8690618413301143, 'max_diff': 1.2269995350579965, 'mean_diff': ...</msg>
<var>${test_passed}</var>
<var>${metrics}</var>
<arg>${original_audio}</arg>
<doc>Télécharge le dernier audio enregistré via l'API Flask et le compare à l'original.
:param original_audio: Chemin du fichier original (wav)
:param latest_audio_path: Chemin où sauvegarder le fichier téléchargé
:param api_url: URL de l'API Flask pour récupérer le dernier audio enregistré
:return: (test_passed, metrics)</doc>
<status status="PASS" start="2025-06-12T11:17:59.342972" elapsed="30.256939"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.601030" level="INFO">SNR: 1.261424760235737 dB</msg>
<arg>SNR: ${metrics['snr']} dB</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:18:29.599911" elapsed="0.001119"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.601030" level="INFO">Corrélation: 0.6013172099418913 (seuil: 0.4)</msg>
<arg>Corrélation: ${metrics['correlation']} (seuil: 0.4)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:18:29.601030" elapsed="0.000882"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.601912" level="INFO">MOS: 3.372037642339699/5 (seuil: 3.0)</msg>
<arg>MOS: ${metrics['mos']}/5 (seuil: 3.0)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:18:29.601912" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.601912" level="INFO">Clarté: 1.0176069288296954 (seuil: 0.8)</msg>
<arg>Clarté: ${metrics['clarity']} (seuil: 0.8)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:18:29.601912" elapsed="0.001096"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.603008" level="INFO">${correlation_ok} = True</msg>
<var>${correlation_ok}</var>
<arg>${metrics['correlation']} &gt;= 0.4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:18:29.603008" elapsed="0.000998"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.604969" level="INFO">${mos_ok} = True</msg>
<var>${mos_ok}</var>
<arg>${metrics['mos']} &gt;= 3.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:18:29.604006" elapsed="0.000963"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.606049" level="INFO">${clarity_ok} = True</msg>
<var>${clarity_ok}</var>
<arg>${metrics['clarity']} &gt;= 0.8</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:18:29.604969" elapsed="0.001080"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.606049" level="INFO">${test_passed} = True</msg>
<var>${test_passed}</var>
<arg>${correlation_ok} and ${mos_ok} and ${clarity_ok}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:18:29.606049" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="not ${test_passed}">
<kw name="Log" owner="BuiltIn">
<arg>❌ Test échoué - Métriques critiques non satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-12T11:18:29.606049" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test audio échoué - Vérifiez les métriques dans les logs</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-12T11:18:29.606049" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-12T11:18:29.606049" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.607032" level="INFO">✅ Test réussi - Toutes les métriques sont satisfaites</msg>
<arg>✅ Test réussi - Toutes les métriques sont satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:18:29.606049" elapsed="0.000983"/>
</kw>
<status status="PASS" start="2025-06-12T11:18:29.606049" elapsed="0.000983"/>
</branch>
<status status="PASS" start="2025-06-12T11:18:29.606049" elapsed="0.000983"/>
</if>
<return>
<value>${test_passed}</value>
<value>${metrics}</value>
<status status="PASS" start="2025-06-12T11:18:29.607032" elapsed="0.000000"/>
</return>
<msg time="2025-06-12T11:18:29.607032" level="INFO">${result} = [True, {'snr': 1.261424760235737, 'correlation': 0.6013172099418913, 'mse': 0.024499235261736647, 'rmse': 0.1565223155391481, 'energy_ratio': 0.8690618413301143, 'max_diff': 1.2269995350579965, 'mean_...</msg>
<var>${result}</var>
<arg>${DEFAULT_OUTPUT_FILE}</arg>
<status status="PASS" start="2025-06-12T11:17:59.342972" elapsed="30.264060"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.607032" level="INFO">Résultat de la comparaison: [True, {'snr': 1.261424760235737, 'correlation': 0.6013172099418913, 'mse': 0.024499235261736647, 'rmse': 0.1565223155391481, 'energy_ratio': 0.8690618413301143, 'max_diff': 1.2269995350579965, 'mean_diff': 0.1031818059303889, 'mos': 3.372037642339699, 'clarity': 1.0176069288296954, 'clarity_db': 0.07580055444361562, 'plot_file': 'resultats\\Single_Test_2025-06-12_11-15-44_TestsAudio\\plots\\audio_comparison_enregistrement_20250612_111819.png'}]</msg>
<arg>Résultat de la comparaison: ${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:18:29.607032" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:17:16.272511" elapsed="73.334521"/>
</kw>
<msg time="2025-06-12T11:18:29.607032" level="INFO">${test_status} = True</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:17:16.272511" elapsed="73.334521"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.608020" level="INFO">Test Test Audio Recording And Playback réussi</msg>
<arg>Test ${test_name} réussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:18:29.608020" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<msg time="2025-06-12T11:18:29.608020" level="INFO">Exiting for loop altogether.</msg>
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="PASS" start="2025-06-12T11:18:29.608020" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:18:29.607032" elapsed="0.000988"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-12T11:18:29.608020" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} échoué - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-12T11:18:29.608020" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-12T11:18:29.608020" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-12T11:18:29.608020" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2025-06-12T11:18:29.608020" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2025-06-12T11:18:29.608020" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-12T11:18:29.607032" elapsed="0.000988"/>
</if>
<var name="${index}">1</var>
<status status="PASS" start="2025-06-12T11:17:16.272511" elapsed="73.335509"/>
</iter>
<var>${index}</var>
<value>${MAX_RETRIES}</value>
<status status="PASS" start="2025-06-12T11:15:53.620999" elapsed="155.987021"/>
</for>
<if>
<branch type="IF" condition="not ${test_status}">
<kw name="Fail" owner="BuiltIn">
<arg>Le test ${test_name} a échoué après ${MAX_RETRIES} tentatives</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-12T11:18:29.608968" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-12T11:18:29.608020" elapsed="0.000948"/>
</branch>
<status status="PASS" start="2025-06-12T11:18:29.608020" elapsed="0.000948"/>
</if>
<arg>Verify Audio Recording</arg>
<arg>Test Audio Recording And Playback</arg>
<status status="PASS" start="2025-06-12T11:15:53.620369" elapsed="155.988599"/>
</kw>
<doc>Verifies audio recording and playback functionality
- Navigates to audio recording app
- Records audio for a specified duration
- Plays back the recorded audio
- Supports both French and English interfaces</doc>
<tag>audio</tag>
<tag>playback</tag>
<tag>recording</tag>
<status status="PASS" start="2025-06-12T11:15:53.614263" elapsed="155.994705"/>
</test>
<test id="s1-t3" name="Test Audio Player And Playback" line="250">
<kw name="Navigate To Audio Player App">
<kw name="Start Activity Code" owner="Integration">
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<doc>Lance une activité spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-12T11:18:29.609935" elapsed="0.051768"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:18:32.663249" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:18:29.662695" elapsed="3.000554"/>
</kw>
<kw name="Print Activity" owner="Integration">
<msg time="2025-06-12T11:18:32.745735" level="INFO">${current_activity} = com.example.audioapplicationtest/.AudioPlayerActivity</msg>
<var>${current_activity}</var>
<arg>${driver}</arg>
<doc>Retourne l'activité complète sous la forme 'com.android.car.messenger/.ui.launcher.MessageLauncherActivity'.</doc>
<status status="PASS" start="2025-06-12T11:18:32.663249" elapsed="0.082486"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${current_activity}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<arg>L'application n'est pas correctement lancée</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-12T11:18:32.745735" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:18:29.608968" elapsed="3.136767"/>
</kw>
<kw name="Record Audio" owner="Integration">
<msg time="2025-06-12T11:18:32.751179" level="INFO">✅ Enregistrement audio réussi : Enregistrement audio démarré</msg>
<msg time="2025-06-12T11:18:32.751179" level="INFO">${recording_success} = True</msg>
<var>${recording_success}</var>
<arg>${driver}</arg>
<arg>23</arg>
<doc>Enregistre l'audio du système via l'API Flask.</doc>
<status status="PASS" start="2025-06-12T11:18:32.745735" elapsed="0.005444"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${recording_success}</arg>
<arg>L'enregistrement audio a échoué</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:18:32.751179" elapsed="0.000523"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:18:33.751919" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:18:32.751702" elapsed="1.000217"/>
</kw>
<kw name="Click Play Button">
<kw name="Wait For Record Button">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check Element Exists" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-12T11:18:33.751919" elapsed="0.065257"/>
</kw>
<arg>${timeout}</arg>
<arg>${QUICK_WAIT}</arg>
<arg>Check Element Exists</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2025-06-12T11:18:33.751919" elapsed="0.065257"/>
</kw>
<status status="PASS" start="2025-06-12T11:18:33.751919" elapsed="0.065257"/>
</kw>
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-12T11:18:33.883021" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-12T11:18:33.817176" elapsed="0.065845"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton PLAY TEST WAV n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:18:33.883021" elapsed="0.001009"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-12T11:18:33.884030" elapsed="0.481456"/>
</kw>
<msg time="2025-06-12T11:18:34.366074" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:18:33.884030" elapsed="0.482044"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton START</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-12T11:18:34.366074" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-12T11:18:33.751919" elapsed="0.614155"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-12T11:18:56.366819" level="INFO">Slept 22 seconds.</msg>
<arg>22s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-12T11:18:34.366074" elapsed="22.000745"/>
</kw>
<kw name="Compare Audio Files Play">
<kw name="Compare With Latest Recorded Play" owner="TestAudio">
<msg time="2025-06-12T11:19:26.433662" level="INFO">Graphiques sauvegardés dans: resultats\Single_Test_2025-06-12_11-15-44_TestsAudio\plots\audio_comparison_lecture_20250612_111916.png</msg>
<msg time="2025-06-12T11:19:26.433662" level="INFO">============================= Début du test audio ==============================
Original: C:\Users\bahae\Documents\PfeProject\test_cases\test.wav
Enregistré: latest_playback.wav
Date du test: 2025-06-12 11:18:58

Original - Durée: 18.31s -&gt; Segment actif: 18.31s
Enregistré - Durée: 23.00s -&gt; Segment actif: 18.35s
Recherche du meilleur alignement...
Alignement initial trouvé, ajustement fin...

Détails de l'alignement:
Position originale: 0.000s
Position enregistrée: 0.018s
Ajustement: 17.9ms
Corrélation initiale: 0.284
Original length: 807552, Recorded length: 807552
Best lag: 0 samples (0.000 seconds)
Final lengths - Original: 807552, Aligned: 807552
Décalage temporel final: 0.000 secondes

=== Résultats ===
Décalage temporel: 0.000 secondes
         snr: -1.1620
 correlation: 0.2845
         mse: 0.0432
        rmse: 0.2078
energy_ratio: 0.8229
    max_diff: 1.6492
   mean_diff: 0.1473
         mos: 2.8949
     clarity: 1.2166
  clarity_db: 0.8515

=== Résultat: ÉCHEC ===
SNR: -1.16 dB (seuil: -1 dB)
Corrélation: 0.284 (seuil: 0.4)
MOS: 2.89/5 (seuil: 3.0)
Clarté: 1.217 (seuil: 0.8)</msg>
<msg time="2025-06-12T11:19:26.433662" level="INFO">${test_passed} = False</msg>
<msg time="2025-06-12T11:19:26.433662" level="INFO">${metrics} = {'snr': -1.1620174973614785, 'correlation': 0.28449422129152346, 'mse': 0.04316489747527747, 'rmse': 0.2077616361970551, 'energy_ratio': 0.8229424681032379, 'max_diff': 1.6491883435880865, 'mean_diff'...</msg>
<var>${test_passed}</var>
<var>${metrics}</var>
<arg>${original_audio}</arg>
<doc>Télécharge le dernier audio lu via l'API Flask et le compare à l'original.
:param original_audio: Chemin du fichier original (wav)
:param latest_audio_path: Chemin où sauvegarder le fichier téléchargé
:param api_url: URL de l'API Flask pour récupérer le dernier audio lu
:return: (test_passed, metrics)</doc>
<status status="PASS" start="2025-06-12T11:18:56.367803" elapsed="30.065859"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.433662" level="INFO">SNR: -1.1620174973614785 dB</msg>
<arg>SNR: ${metrics['snr']} dB</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:19:26.433662" elapsed="0.000999"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.434661" level="INFO">Corrélation: 0.28449422129152346 (seuil: 0.4)</msg>
<arg>Corrélation: ${metrics['correlation']} (seuil: 0.4)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:19:26.434661" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.435230" level="INFO">MOS: 2.894912365655369/5 (seuil: 3.0)</msg>
<arg>MOS: ${metrics['mos']}/5 (seuil: 3.0)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:19:26.435230" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.435230" level="INFO">Clarté: 1.2165979588530027 (seuil: 0.8)</msg>
<arg>Clarté: ${metrics['clarity']} (seuil: 0.8)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:19:26.435230" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.436234" level="INFO">${plot_file} = resultats\Single_Test_2025-06-12_11-15-44_TestsAudio\plots\audio_comparison_lecture_20250612_111916.png</msg>
<var>${plot_file}</var>
<arg>${metrics['plot_file']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-12T11:19:26.435230" elapsed="0.001004"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.436234" level="INFO">&lt;img src="resultats\Single_Test_2025-06-12_11-15-44_TestsAudio\plots\audio_comparison_lecture_20250612_111916.png" width="800px"/&gt;</msg>
<arg>&lt;img src="${plot_file}" width="800px"/&gt;</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:19:26.436234" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.436234" level="INFO">${correlation_ok} = False</msg>
<var>${correlation_ok}</var>
<arg>${metrics['correlation']} &gt;= 0.4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:19:26.436234" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.437329" level="INFO">${mos_ok} = False</msg>
<var>${mos_ok}</var>
<arg>${metrics['mos']} &gt;= 3.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:19:26.436234" elapsed="0.001095"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.438331" level="INFO">${clarity_ok} = True</msg>
<var>${clarity_ok}</var>
<arg>${metrics['clarity']} &gt;= 0.8</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:19:26.437329" elapsed="0.001002"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.438331" level="INFO">${test_passed} = False</msg>
<var>${test_passed}</var>
<arg>${correlation_ok} and ${mos_ok} and ${clarity_ok}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-12T11:19:26.438331" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="not ${test_passed}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.438331" level="INFO">❌ Test échoué - Métriques critiques non satisfaites</msg>
<arg>❌ Test échoué - Métriques critiques non satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-12T11:19:26.438331" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-12T11:19:26.438954" level="FAIL">Test audio échoué - Vérifiez les métriques dans les logs</msg>
<arg>Test audio échoué - Vérifiez les métriques dans les logs</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-12T11:19:26.438954" elapsed="0.000000">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<status status="FAIL" start="2025-06-12T11:19:26.438331" elapsed="0.000623">Test audio échoué - Vérifiez les métriques dans les logs</status>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Test réussi - Toutes les métriques sont satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-12T11:19:26.438954" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-12T11:19:26.438954" elapsed="0.000000"/>
</branch>
<status status="FAIL" start="2025-06-12T11:19:26.438331" elapsed="0.000623">Test audio échoué - Vérifiez les métriques dans les logs</status>
</if>
<return>
<value>${test_passed}</value>
<value>${metrics}</value>
<status status="NOT RUN" start="2025-06-12T11:19:26.438954" elapsed="0.000000"/>
</return>
<arg>C:\\Users\\bahae\\Documents\\PfeProject\\test_cases${/}test.wav</arg>
<status status="FAIL" start="2025-06-12T11:18:56.366819" elapsed="30.072135">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<doc>Verifies audio recording and playback functionality
- Navigates to audio recording app
- Records audio for a specified duration
- Plays audio
- Supports both French and English interfaces</doc>
<tag>audio</tag>
<tag>playback</tag>
<tag>recording</tag>
<status status="FAIL" start="2025-06-12T11:18:29.608968" elapsed="56.829986">Test audio échoué - Vérifiez les métriques dans les logs</status>
</test>
<kw name="Fermer Driver" type="TEARDOWN">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Variable Should Exist" owner="BuiltIn">
<arg>${driver}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" start="2025-06-12T11:19:26.440052" elapsed="0.000000"/>
</kw>
<msg time="2025-06-12T11:19:26.440052" level="INFO">${driver_exists} = True</msg>
<var>${driver_exists}</var>
<arg>Variable Should Exist</arg>
<arg>${driver}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:19:26.440052" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${driver_exists}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Close Driver" owner="Integration">
<arg>${driver}</arg>
<doc>Ferme proprement le driver Appium.</doc>
<status status="PASS" start="2025-06-12T11:19:26.440052" elapsed="0.157733"/>
</kw>
<msg time="2025-06-12T11:19:26.597785" level="INFO">${close_success} = True</msg>
<var>${close_success}</var>
<arg>Close Driver</arg>
<arg>${driver}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-12T11:19:26.440052" elapsed="0.157733"/>
</kw>
<if>
<branch type="IF" condition="not ${close_success}">
<kw name="Log" owner="BuiltIn">
<arg>Warning: Impossible de fermer proprement le driver Appium</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-12T11:19:26.597785" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-12T11:19:26.597785" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-12T11:19:26.597785" elapsed="0.000000"/>
</if>
<status status="PASS" start="2025-06-12T11:19:26.440052" elapsed="0.157733"/>
</branch>
<status status="PASS" start="2025-06-12T11:19:26.440052" elapsed="0.157733"/>
</if>
<status status="PASS" start="2025-06-12T11:19:26.438954" elapsed="0.158831"/>
</kw>
<doc>Tests for audio recording and playback functionality
- Verifies audio recording capabilities
- Verifies audio playback capabilities
- Supports both French and English interfaces</doc>
<status status="FAIL" start="2025-06-12T11:15:44.639557" elapsed="221.958228"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">audio</stat>
<stat pass="1" fail="1" skip="0">playback</stat>
<stat pass="1" fail="1" skip="0">recording</stat>
</tag>
<suite>
<stat name="TestsAudio" id="s1" pass="2" fail="1" skip="0">TestsAudio</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
