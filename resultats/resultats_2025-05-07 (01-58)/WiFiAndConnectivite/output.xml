<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.12.5 on win32)" generated="2025-05-07T01:58:06.598234" rpa="false" schemaversion="5">
<suite id="s1" name="WiFiAndConnectivite" source="C:\Users\bahae\Desktop\PfeProject\test_cases\WiFiAndConnectivite.robot">
<kw name="Démarrer Driver" type="SETUP">
<kw name="Setup Driver" owner="Integration">
<msg time="2025-05-07T01:58:16.887367" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="61b8311a-9e0d-4379-8e73-2581dabbc0d9")&gt;</msg>
<var>${driver}</var>
<arg>${Device}</arg>
<doc>Initialise et retourne le driver Appium.</doc>
<status status="PASS" start="2025-05-07T01:58:09.452385" elapsed="7.434982"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-05-07T01:58:16.887367" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="61b8311a-9e0d-4379-8e73-2581dabbc0d9")&gt;</msg>
<arg>${driver}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-05-07T01:58:16.887367" elapsed="0.000000"/>
</kw>
<kw name="Initialize Language Settings">
<kw name="Get System Language" owner="Integration">
<msg time="2025-05-07T01:58:16.964975" level="INFO">${lang} = fr</msg>
<var>${lang}</var>
<arg>${Device}</arg>
<status status="PASS" start="2025-05-07T01:58:16.888367" elapsed="0.076608"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-05-07T01:58:16.964975" level="INFO">${lang_dict} = {'System': 'Système', 'Setting': 'Paramètres', 'ReseauMenu': 'Réseau et Internet'}</msg>
<var>${lang_dict}</var>
<arg>'${lang}' == 'fr'</arg>
<arg>${LANG_FR}</arg>
<arg>${LANG_EN}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-05-07T01:58:16.964975" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-05-07T01:58:16.964975" level="INFO">${LANG_DICT} = {'System': 'Système', 'Setting': 'Paramètres', 'ReseauMenu': 'Réseau et Internet'}</msg>
<arg>${LANG_DICT}</arg>
<arg>${lang_dict}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-05-07T01:58:16.964975" elapsed="0.000000"/>
</kw>
<doc>Sets up language-specific variables based on system language</doc>
<status status="PASS" start="2025-05-07T01:58:16.887367" elapsed="0.077608"/>
</kw>
<doc>Initializes the test driver</doc>
<status status="PASS" start="2025-05-07T01:58:09.451384" elapsed="7.513591"/>
</kw>
<test id="s1-t1" name="Test Ouvrir Wifi" line="142">
<kw name="Execute Test With Retry">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-07T01:58:16.965977" level="INFO">${attempt} = 1</msg>
<var>${attempt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-07T01:58:16.965977" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-07T01:58:16.965977" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${FALSE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-07T01:58:16.965977" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Execute Open Wifi Test">
<kw name="Open Application With Click" owner="Integration">
<msg time="2025-05-07T01:58:30.979274" level="FAIL">InvalidElementStateException: Message: Unable to perform W3C actions. Check the logcat output for possible error reports and make sure your input actions chain is valid.
Stacktrace:
io.appium.uiautomator2.common.exceptions.InvalidElementStateException: Unable to perform W3C actions. Check the logcat output for possible error reports and make sure your input actions chain is valid.
	at io.appium.uiautomator2.handler.W3CActions.safeHandle(W3CActions.java:82)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)
</msg>
<var>${resultat}</var>
<arg>${driver}</arg>
<arg>${LANG_DICT.Setting}</arg>
<status status="FAIL" start="2025-05-07T01:58:16.966976" elapsed="14.014299">InvalidElementStateException: Message: Unable to perform W3C actions. Check the logcat output for possible error reports and make sure your input actions chain is valid.
Stacktrace:
io.appium.uiautomator2.common.exceptions.InvalidElementStateException: Unable to perform W3C actions. Check the logcat output for possible error reports and make sure your input actions chain is valid.
	at io.appium.uiautomator2.handler.W3CActions.safeHandle(W3CActions.java:82)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)</status>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${QUICK_WAIT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-05-07T01:58:30.981275" elapsed="0.001000"/>
</kw>
<kw name="Check Element Exists By Id" owner="Integration">
<var>${Verfier}</var>
<arg>${driver}</arg>
<arg>${Setting_xpath_id}</arg>
<doc>Vérifie si un élément existe en utilisant son ID.</doc>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${Verfier}</arg>
<arg>Settings screen is not displayed</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<kw name="Clique Sur Setting" owner="Integration">
<arg>${driver}</arg>
<arg>${LANG_DICT.ReseauMenu}</arg>
<arg>${Setting_menu}</arg>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<kw name="Activer Wifi Si Desactive" owner="Integration">
<arg>${driver}</arg>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${WAIT_TIME}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<kw name="Is Active Wifi Ui" owner="Integration">
<var>${verifier_wifi_ui}</var>
<arg>${driver}</arg>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be True</arg>
<arg>${verifier_wifi_ui}</arg>
<arg>WiFi is not active in UI</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<kw name="Is Wifi Enabled Adb" owner="Integration">
<var>${verfier_wifi_adb}</var>
<arg>${driver}</arg>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<arg>Should Be True</arg>
<arg>${verfier_wifi_adb}</arg>
<arg>WiFi is not active via ADB</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="NOT RUN" start="2025-05-07T01:58:30.982275" elapsed="0.000000"/>
</kw>
<doc>Tests WiFi activation</doc>
<status status="FAIL" start="2025-05-07T01:58:16.966976" elapsed="14.016300">InvalidElementStateException: Message: Unable to perform W3C actions. Check the logcat output for possible error reports and make sure your input actions chain is valid.
Stacktrace:
io.appium.uiautomator2.common.exceptions.InvalidElementStateException: Unable to perform W3C actions. Check the logcat output for possible error reports and make sure your input actions chain is valid.
	at io.appium.uiautomator2.handler.W3CActions.safeHandle(W3CActions.java:82)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1012)</status>
</kw>
<msg time="2025-05-07T01:58:30.983276" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-05-07T01:58:16.966976" elapsed="14.016300"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} réussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-07T01:58:30.983276" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="NOT RUN" start="2025-05-07T01:58:30.983276" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-07T01:58:30.983276" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-05-07T01:58:30.983276" level="INFO">${attempt} = 2</msg>
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-05-07T01:58:30.983276" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-07T01:58:30.984274" level="INFO">Test Test Ouvrir Wifi échoué - Tentative 2/3</msg>
<arg>Test ${test_name} échoué - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-07T01:58:30.984274" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-07T01:58:32.985249" level="INFO">Slept 2 seconds.</msg>
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-07T01:58:30.984274" elapsed="2.000975"/>
</kw>
<status status="PASS" start="2025-05-07T01:58:30.983276" elapsed="2.001973"/>
</branch>
<status status="PASS" start="2025-05-07T01:58:30.983276" elapsed="2.001973"/>
</if>
<status status="PASS" start="2025-05-07T01:58:30.983276" elapsed="2.001973"/>
</branch>
<status status="PASS" start="2025-05-07T01:58:30.983276" elapsed="2.001973"/>
</if>
<var name="${index}">0</var>
<status status="PASS" start="2025-05-07T01:58:16.966976" elapsed="16.018273"/>
</iter>
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Execute Open Wifi Test">
<kw name="Open Application With Click" owner="Integration">
<msg time="2025-05-07T01:58:51.589532" level="INFO">📌 Liste des applications détectées : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualités', 'Home Assistant', 'Local Media Player', 'Maps', 'Paramètres', 'Play\xa0Store', 'Prime Video', 'SMS']
📌 First Home Page détectée : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualités', 'Home Assistant', 'Local Media Player', 'Maps', 'Paramètres', 'Play\xa0Store', 'Prime Video', 'SMS']

📌 Liste des applications détectées : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualités', 'Home Assistant', 'Local Media Player', 'Maps', 'Paramètres', 'Play\xa0Store', 'Prime Video', 'SMS']
✅ Retour à la first home page !

📌 Liste des applications détectées : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualités', 'Home Assistant', 'Local Media Player', 'Maps', 'Paramètres', 'Play\xa0Store', 'Prime Video', 'SMS']
378 619 522 657</msg>
<msg time="2025-05-07T01:58:51.590532" level="INFO">${resultat} = True</msg>
<var>${resultat}</var>
<arg>${driver}</arg>
<arg>${LANG_DICT.Setting}</arg>
<status status="PASS" start="2025-05-07T01:58:32.986249" elapsed="18.604283"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-07T01:58:52.090704" level="INFO">Slept 500 milliseconds.</msg>
<arg>${QUICK_WAIT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-07T01:58:51.590532" elapsed="0.500172"/>
</kw>
<kw name="Check Element Exists By Id" owner="Integration">
<msg time="2025-05-07T01:58:53.761373" level="INFO">${Verfier} = True</msg>
<var>${Verfier}</var>
<arg>${driver}</arg>
<arg>${Setting_xpath_id}</arg>
<doc>Vérifie si un élément existe en utilisant son ID.</doc>
<status status="PASS" start="2025-05-07T01:58:52.090704" elapsed="1.670669"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${Verfier}</arg>
<arg>Settings screen is not displayed</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-05-07T01:58:53.761373" elapsed="0.000000"/>
</kw>
<kw name="Clique Sur Setting" owner="Integration">
<msg time="2025-05-07T01:58:55.515199" level="INFO">(0, 76, 550, 696)
✅ 'Réseau et Internet' trouvé sans swipe. Appui en cours...</msg>
<arg>${driver}</arg>
<arg>${LANG_DICT.ReseauMenu}</arg>
<arg>${Setting_menu}</arg>
<status status="PASS" start="2025-05-07T01:58:53.761373" elapsed="1.753826"/>
</kw>
<kw name="Activer Wifi Si Desactive" owner="Integration">
<msg time="2025-05-07T01:58:56.758377" level="INFO">false</msg>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-07T01:58:55.515199" elapsed="1.244176"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-07T01:58:58.759430" level="INFO">Slept 2 seconds.</msg>
<arg>${WAIT_TIME}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-07T01:58:56.759375" elapsed="2.000055"/>
</kw>
<kw name="Is Active Wifi Ui" owner="Integration">
<msg time="2025-05-07T01:59:01.441186" level="INFO">État actuel du Wi-Fi : true</msg>
<msg time="2025-05-07T01:59:01.442186" level="INFO">${verifier_wifi_ui} = True</msg>
<var>${verifier_wifi_ui}</var>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-07T01:58:58.759430" elapsed="2.682756"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be True" owner="BuiltIn">
<arg>${verifier_wifi_ui}</arg>
<arg>WiFi is not active in UI</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-05-07T01:59:01.442186" elapsed="0.000000"/>
</kw>
<arg>Should Be True</arg>
<arg>${verifier_wifi_ui}</arg>
<arg>WiFi is not active in UI</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2025-05-07T01:59:01.442186" elapsed="0.000000"/>
</kw>
<kw name="Is Wifi Enabled Adb" owner="Integration">
<msg time="2025-05-07T01:59:01.804844" level="INFO">✅ Le Wi-Fi est activé.</msg>
<msg time="2025-05-07T01:59:01.804844" level="INFO">${verfier_wifi_adb} = True</msg>
<var>${verfier_wifi_adb}</var>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-07T01:59:01.443186" elapsed="0.361658"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be True" owner="BuiltIn">
<arg>${verfier_wifi_adb}</arg>
<arg>WiFi is not active via ADB</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-05-07T01:59:01.805869" elapsed="0.000000"/>
</kw>
<arg>Should Be True</arg>
<arg>${verfier_wifi_adb}</arg>
<arg>WiFi is not active via ADB</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2025-05-07T01:59:01.805869" elapsed="0.000000"/>
</kw>
<doc>Tests WiFi activation</doc>
<status status="PASS" start="2025-05-07T01:58:32.985249" elapsed="28.820620"/>
</kw>
<msg time="2025-05-07T01:59:01.805869" level="INFO">${test_status} = True</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-05-07T01:58:32.985249" elapsed="28.820620"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-07T01:59:01.805869" level="INFO">Test Test Ouvrir Wifi réussi</msg>
<arg>Test ${test_name} réussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-07T01:59:01.805869" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<msg time="2025-05-07T01:59:01.805869" level="INFO">Exiting for loop altogether.</msg>
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="PASS" start="2025-05-07T01:59:01.805869" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-05-07T01:59:01.805869" elapsed="0.000990"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} échoué - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-07T01:59:01.805869" elapsed="0.000990"/>
</if>
<var name="${index}">1</var>
<status status="PASS" start="2025-05-07T01:58:32.985249" elapsed="28.821610"/>
</iter>
<var>${index}</var>
<value>${MAX_RETRIES}</value>
<status status="PASS" start="2025-05-07T01:58:16.965977" elapsed="44.840882"/>
</for>
<if>
<branch type="IF" condition="not ${test_status}">
<kw name="Fail" owner="BuiltIn">
<arg>Le test ${test_name} a échoué après ${MAX_RETRIES} tentatives</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-07T01:59:01.806859" elapsed="0.000000"/>
</if>
<arg>Execute Open Wifi Test</arg>
<arg>Test Ouvrir Wifi</arg>
<status status="PASS" start="2025-05-07T01:58:16.965977" elapsed="44.840882"/>
</kw>
<doc>Teste l'activation du WiFi
- Ouvre les paramètres
- Active le WiFi
- Vérifie l'activation via UI et ADB</doc>
<tag>smoke</tag>
<tag>wifi</tag>
<status status="PASS" start="2025-05-07T01:58:16.964975" elapsed="44.841884"/>
</test>
<test id="s1-t2" name="Test Fermer Wifi" line="150">
<kw name="Execute Test With Retry">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-07T01:59:01.807857" level="INFO">${attempt} = 1</msg>
<var>${attempt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-07T01:59:01.807857" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-07T01:59:01.807857" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${FALSE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-07T01:59:01.807857" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Execute Close Wifi Test">
<kw name="Open Application With Click" owner="Integration">
<msg time="2025-05-07T01:59:20.916202" level="INFO">📌 Liste des applications détectées : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualités', 'Home Assistant', 'Local Media Player', 'Maps', 'Paramètres', 'Play\xa0Store', 'Prime Video', 'SMS']
📌 First Home Page détectée : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualités', 'Home Assistant', 'Local Media Player', 'Maps', 'Paramètres', 'Play\xa0Store', 'Prime Video', 'SMS']

📌 Liste des applications détectées : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualités', 'Home Assistant', 'Local Media Player', 'Maps', 'Paramètres', 'Play\xa0Store', 'Prime Video', 'SMS']
✅ Retour à la first home page !

📌 Liste des applications détectées : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualités', 'Home Assistant', 'Local Media Player', 'Maps', 'Paramètres', 'Play\xa0Store', 'Prime Video', 'SMS']
378 619 522 657</msg>
<msg time="2025-05-07T01:59:20.916202" level="INFO">${resultat} = True</msg>
<var>${resultat}</var>
<arg>${driver}</arg>
<arg>${LANG_DICT.Setting}</arg>
<status status="PASS" start="2025-05-07T01:59:01.808858" elapsed="19.107344"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-07T01:59:21.417100" level="INFO">Slept 500 milliseconds.</msg>
<arg>${QUICK_WAIT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-07T01:59:20.916202" elapsed="0.500898"/>
</kw>
<kw name="Check Element Exists By Id" owner="Integration">
<msg time="2025-05-07T01:59:21.897121" level="INFO">${Verfier} = True</msg>
<var>${Verfier}</var>
<arg>${driver}</arg>
<arg>${Setting_xpath_id}</arg>
<doc>Vérifie si un élément existe en utilisant son ID.</doc>
<status status="PASS" start="2025-05-07T01:59:21.417100" elapsed="0.480021"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${Verfier}</arg>
<arg>Settings screen is not displayed</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-05-07T01:59:21.897121" elapsed="0.000000"/>
</kw>
<kw name="Clique Sur Setting" owner="Integration">
<msg time="2025-05-07T01:59:22.970123" level="INFO">(0, 76, 550, 696)
✅ 'Réseau et Internet' trouvé sans swipe. Appui en cours...</msg>
<arg>${driver}</arg>
<arg>${LANG_DICT.ReseauMenu}</arg>
<arg>${Setting_menu}</arg>
<status status="PASS" start="2025-05-07T01:59:21.897121" elapsed="1.073002"/>
</kw>
<kw name="Desactiver Wifi Si Active" owner="Integration">
<msg time="2025-05-07T01:59:25.146790" level="INFO">true</msg>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-07T01:59:22.970123" elapsed="2.176667"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-07T01:59:27.147472" level="INFO">Slept 2 seconds.</msg>
<arg>${WAIT_TIME}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-07T01:59:25.146790" elapsed="2.000682"/>
</kw>
<kw name="Is Active Wifi Ui" owner="Integration">
<msg time="2025-05-07T01:59:27.739861" level="INFO">État actuel du Wi-Fi : false</msg>
<msg time="2025-05-07T01:59:27.740860" level="INFO">${verifier_wifi_ui} = False</msg>
<var>${verifier_wifi_ui}</var>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-07T01:59:27.147472" elapsed="0.593388"/>
</kw>
<kw name="Should Not Be True" owner="BuiltIn">
<arg>${verifier_wifi_ui}</arg>
<arg>WiFi is still active in UI</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" start="2025-05-07T01:59:27.740860" elapsed="0.000000"/>
</kw>
<kw name="Is Wifi Enabled Adb" owner="Integration">
<msg time="2025-05-07T01:59:28.079504" level="INFO">❌ Le Wi-Fi est désactivé.</msg>
<msg time="2025-05-07T01:59:28.079504" level="INFO">${verfier_wifi_adb} = False</msg>
<var>${verfier_wifi_adb}</var>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-07T01:59:27.740860" elapsed="0.338644"/>
</kw>
<kw name="Should Not Be True" owner="BuiltIn">
<arg>${verfier_wifi_adb}</arg>
<arg>WiFi is still active via ADB</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" start="2025-05-07T01:59:28.079504" elapsed="0.000000"/>
</kw>
<doc>Tests WiFi deactivation</doc>
<status status="PASS" start="2025-05-07T01:59:01.808858" elapsed="26.270646"/>
</kw>
<msg time="2025-05-07T01:59:28.079504" level="INFO">${test_status} = True</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-05-07T01:59:01.808858" elapsed="26.270646"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-07T01:59:28.080505" level="INFO">Test Test Fermer Wifi réussi</msg>
<arg>Test ${test_name} réussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<msg time="2025-05-07T01:59:28.080505" level="INFO">Exiting for loop altogether.</msg>
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="PASS" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-05-07T01:59:28.079504" elapsed="0.001001"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} échoué - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-07T01:59:28.079504" elapsed="0.001001"/>
</if>
<var name="${index}">0</var>
<status status="PASS" start="2025-05-07T01:59:01.808858" elapsed="26.271647"/>
</iter>
<var>${index}</var>
<value>${MAX_RETRIES}</value>
<status status="PASS" start="2025-05-07T01:59:01.807857" elapsed="26.272648"/>
</for>
<if>
<branch type="IF" condition="not ${test_status}">
<kw name="Fail" owner="BuiltIn">
<arg>Le test ${test_name} a échoué après ${MAX_RETRIES} tentatives</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-07T01:59:28.080505" elapsed="0.000000"/>
</if>
<arg>Execute Close Wifi Test</arg>
<arg>Test Fermer Wifi</arg>
<status status="PASS" start="2025-05-07T01:59:01.807857" elapsed="26.272648"/>
</kw>
<doc>Teste la désactivation du WiFi
- Ouvre les paramètres
- Désactive le WiFi
- Vérifie la désactivation via UI et ADB</doc>
<tag>smoke</tag>
<tag>wifi</tag>
<status status="PASS" start="2025-05-07T01:59:01.806859" elapsed="26.273646"/>
</test>
<kw name="Fermer Driver" type="TEARDOWN">
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Get Source" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2025-05-07T01:59:28.082505" level="FAIL">No application is open</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="FAIL" start="2025-05-07T01:59:28.082505" elapsed="0.001000">No application is open</status>
</kw>
<msg time="2025-05-07T01:59:28.084507" level="WARN">Keyword 'Capture Page Screenshot' could not be run on failure: No application is open</msg>
<msg time="2025-05-07T01:59:28.084507" level="FAIL">No application is open</msg>
<doc>Returns the entire source of the current page.</doc>
<status status="FAIL" start="2025-05-07T01:59:28.081504" elapsed="0.003003">No application is open</status>
</kw>
<msg time="2025-05-07T01:59:28.084507" level="INFO">${session_active} = False</msg>
<var>${session_active}</var>
<arg>Get Source</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-05-07T01:59:28.081504" elapsed="0.003003"/>
</kw>
<if>
<branch type="IF" condition="${session_active}">
<kw name="Close Driver" owner="Integration">
<arg>${driver}</arg>
<doc>Ferme proprement le driver Appium.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:28.084507" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>Driver fermé avec succès</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:28.084507" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-07T01:59:28.084507" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-07T01:59:28.084507" level="INFO">Le driver n'était pas actif</msg>
<arg>Le driver n'était pas actif</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-07T01:59:28.084507" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-05-07T01:59:28.084507" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-07T01:59:28.084507" elapsed="0.000000"/>
</if>
<status status="PASS" start="2025-05-07T01:59:28.081504" elapsed="0.003003"/>
</branch>
<branch type="EXCEPT" assign="${error}">
<kw name="Log" owner="BuiltIn">
<arg>Erreur lors de la fermeture du driver: ${error}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-07T01:59:28.085506" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-07T01:59:28.085506" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-07T01:59:28.081504" elapsed="0.004002"/>
</try>
<doc>Cleans up and closes the test driver</doc>
<status status="PASS" start="2025-05-07T01:59:28.081504" elapsed="0.004002"/>
</kw>
<doc>Tests de connectivité WiFi pour appareil Android
- Activation du WiFi
- Désactivation du WiFi
- Vérification de l'état via UI et ADB
- Prend en charge les interfaces en français et en anglais</doc>
<status status="PASS" start="2025-05-07T01:58:06.600234" elapsed="81.485272"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">smoke</stat>
<stat pass="2" fail="0" skip="0">wifi</stat>
</tag>
<suite>
<stat name="WiFiAndConnectivite" id="s1" pass="2" fail="0" skip="0">WiFiAndConnectivite</stat>
</suite>
</statistics>
<errors>
<msg time="2025-05-07T01:59:28.084507" level="WARN">Keyword 'Capture Page Screenshot' could not be run on failure: No application is open</msg>
</errors>
</robot>
