<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.12.5 on win32)" generated="2025-06-11T11:01:17.812658" rpa="false" schemaversion="5">
<suite id="s1" name="TestsAudio" source="C:\Users\bahae\Documents\PfeProject\test_cases\TestsAudio.robot">
<kw name="Démarrer Driver" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:01:26.743084" level="INFO">Tentative d'initialisation du driver Appium...</msg>
<arg>Tentative d'initialisation du driver Appium...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:01:26.743084" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:01:26.743084" level="INFO">URL Appium: C:\Users\bahae\Documents\PfeProject\test_cases\..\config.py</msg>
<arg>URL Appium: C:\\Users\\bahae\\Documents\\PfeProject\\test_cases${/}..${/}config.py</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:01:26.743084" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Setup Driver" owner="Integration">
<arg>${Device}</arg>
<doc>Initialise et retourne le driver Appium.</doc>
<status status="PASS" start="2025-06-11T11:01:26.744081" elapsed="6.257286"/>
</kw>
<msg time="2025-06-11T11:01:33.001367" level="INFO">${result} = ('PASS', &lt;appium.webdriver.webdriver.WebDriver (session="36e08a6e-1907-4d09-8215-93af18792e0c")&gt;)</msg>
<var>${result}</var>
<arg>setup driver</arg>
<arg>${Device}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2025-06-11T11:01:26.743084" elapsed="6.258283"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T11:01:33.001367" level="INFO">${status} = PASS</msg>
<msg time="2025-06-11T11:01:33.001367" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="36e08a6e-1907-4d09-8215-93af18792e0c")&gt;</msg>
<var>${status}</var>
<var>${driver}</var>
<arg>${result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T11:01:33.001367" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'FAIL'">
<kw name="Log" owner="BuiltIn">
<arg>Échec de l'initialisation du driver: ${driver}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:01:33.002010" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Impossible d'initialiser le driver Appium: ${driver}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-11T11:01:33.002010" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T11:01:33.001904" elapsed="0.000106"/>
</branch>
<status status="PASS" start="2025-06-11T11:01:33.001904" elapsed="0.000106"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-11T11:01:33.002010" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="36e08a6e-1907-4d09-8215-93af18792e0c")&gt;</msg>
<arg>${driver}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-11T11:01:33.002010" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:01:33.002572" level="INFO">Driver Appium initialisé avec succès</msg>
<arg>Driver Appium initialisé avec succès</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:01:33.002010" elapsed="0.000562"/>
</kw>
<status status="PASS" start="2025-06-11T11:01:26.742564" elapsed="6.260008"/>
</kw>
<test id="s1-t1" name="Test fgdya" line="236">
<kw name="Close Activity Robot" owner="Integration">
<msg time="2025-06-11T11:01:34.200161" level="INFO">Échec de terminateApp: Message: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
Stacktrace:
BadParametersError: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
    at checkParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:155:9)
    at validateExecuteMethodParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:242:5)
    at AndroidUiautomator2Driver.executeMethod (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\commands\execute.ts:34:45)
    at AndroidUiautomator2Driver.execute (C:\Users\bahae\.appium\node_modules\appium-uiautomator2-driver\node_modules\appium-android-driver\lib\commands\execute.js:17:23)
    at runCommandPromise (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:115:20)
    at C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:171:12
    at AsyncLock._promiseTry (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:306:31)
    at exec (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:170:9)
    at AsyncLock.acquire (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:189:3)
    at AndroidUiautomator2Driver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:159:39)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at defaultBehavior (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:787:14)
    at AppiumDriver.executeWrappedCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:900:16)
    at AppiumDriver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:799:17)
    at asyncHandler (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:387:19)
Touche HOME pressée
Application com.example.audioapplicationtest fermée avec force-stop
Application com.example.audioapplicationtest fermée avec succès</msg>
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest</arg>
<doc>Version de close_activity adaptée pour Robot Framework.
Utilise plusieurs méthodes pour s'assurer que l'application est bien fermée.</doc>
<status status="PASS" start="2025-06-11T11:01:33.002572" elapsed="1.197589"/>
</kw>
<status status="PASS" start="2025-06-11T11:01:33.002572" elapsed="1.197589"/>
</test>
<test id="s1-t2" name="Test Audio Recording And Playback" line="239">
<kw name="Close Activity" owner="Integration">
<msg time="2025-06-11T11:01:34.204407" level="INFO">Erreur lors de la fermeture de l'application com.example.audioapplicationtest/.AudioPlayerActivity: Message: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
Stacktrace:
BadParametersError: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
    at checkParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:155:9)
    at validateExecuteMethodParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:242:5)
    at AndroidUiautomator2Driver.executeMethod (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\commands\execute.ts:34:45)
    at AndroidUiautomator2Driver.execute (C:\Users\bahae\.appium\node_modules\appium-uiautomator2-driver\node_modules\appium-android-driver\lib\commands\execute.js:17:23)
    at runCommandPromise (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:115:20)
    at C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:171:12
    at AsyncLock._promiseTry (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:306:31)
    at exec (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:170:9)
    at AsyncLock.acquire (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:189:3)
    at AndroidUiautomator2Driver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:159:39)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at defaultBehavior (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:787:14)
    at AppiumDriver.executeWrappedCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:900:16)
    at AppiumDriver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:799:17)
    at asyncHandler (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:387:19)</msg>
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<doc>Ferme une application spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-11T11:01:34.200732" elapsed="0.004675"/>
</kw>
<kw name="Execute Test With Retry">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T11:01:34.205407" level="INFO">${attempt} = 1</msg>
<var>${attempt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T11:01:34.205407" elapsed="0.000657"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T11:01:34.206116" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${FALSE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T11:01:34.206116" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Verify Audio Recording">
<kw name="Initialize Language Settings">
<kw name="Get System Language" owner="Integration">
<msg time="2025-06-11T11:01:34.265456" level="INFO">${lang} = eng</msg>
<var>${lang}</var>
<arg>${Device}</arg>
<status status="PASS" start="2025-06-11T11:01:34.206917" elapsed="0.058539"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-06-11T11:01:34.266480" level="INFO">${lang_dict} = {'System': 'System', 'Setting': 'Settings', 'Audio': 'Recording', 'Record': 'START', 'Stop': 'STOP', 'Play': 'Play'}</msg>
<var>${lang_dict}</var>
<arg>'${lang}' == 'fr'</arg>
<arg>${LANG_FR}</arg>
<arg>${LANG_EN}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-06-11T11:01:34.265456" elapsed="0.001024"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-11T11:01:34.266480" level="INFO">${LANG_DICT} = {'System': 'System', 'Setting': 'Settings', 'Audio': 'Recording', 'Record': 'START', 'Stop': 'STOP', 'Play': 'Play'}</msg>
<arg>${LANG_DICT}</arg>
<arg>${lang_dict}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-11T11:01:34.266480" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T11:01:34.206917" elapsed="0.059563"/>
</kw>
<kw name="Navigate To Audio App">
<kw name="Start Activity Code" owner="Integration">
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.MainActivity</arg>
<doc>Lance une activité spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-11T11:01:34.266480" elapsed="0.068412"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T11:01:37.335970" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T11:01:34.335868" elapsed="3.000102"/>
</kw>
<kw name="Print Activity" owner="Integration">
<msg time="2025-06-11T11:01:37.447531" level="INFO">${current_activity} = com.example.audioapplicationtest/.MainActivity</msg>
<var>${current_activity}</var>
<arg>${driver}</arg>
<doc>Retourne l'activité complète sous la forme 'com.android.car.messenger/.ui.launcher.MessageLauncherActivity'.</doc>
<status status="PASS" start="2025-06-11T11:01:37.335970" elapsed="0.111561"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${current_activity}</arg>
<arg>com.example.audioapplicationtest/.MainActivity</arg>
<arg>L'application n'est pas correctement lancée</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-11T11:01:37.448967" elapsed="0.000026"/>
</kw>
<status status="PASS" start="2025-06-11T11:01:34.266480" elapsed="3.182513"/>
</kw>
<kw name="Start Audio Recording And Playback">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:01:37.449577" level="INFO">Démarrage de l'enregistrement audio...</msg>
<arg>Démarrage de l'enregistrement audio...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:01:37.449577" elapsed="0.000000"/>
</kw>
<kw name="Get Audio File Duration">
<kw name="Get Audio Duration" owner="Integration">
<msg time="2025-06-11T11:01:37.452158" level="INFO">✅ Durée du fichier audio C:\Users\bahae\Documents\PfeProject\test_cases\test.wav: 18.31 secondes</msg>
<msg time="2025-06-11T11:01:37.452158" level="INFO">${duration} = 18.311836734693877</msg>
<var>${duration}</var>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Obtient la durée d'un fichier audio en secondes.</doc>
<status status="PASS" start="2025-06-11T11:01:37.449577" elapsed="0.002581"/>
</kw>
<kw name="Should Not Be Equal As Numbers" owner="BuiltIn">
<msg time="2025-06-11T11:01:37.452158" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<arg>${duration}</arg>
<arg>0</arg>
<arg>Impossible d'obtenir la durée du fichier audio</arg>
<doc>Fails if objects are equal after converting them to real numbers.</doc>
<status status="PASS" start="2025-06-11T11:01:37.452158" elapsed="0.000000"/>
</kw>
<return>
<value>${duration}</value>
<status status="PASS" start="2025-06-11T11:01:37.452158" elapsed="0.000000"/>
</return>
<msg time="2025-06-11T11:01:37.452158" level="INFO">${duration} = 18.311836734693877</msg>
<var>${duration}</var>
<arg>${audio_file}</arg>
<status status="PASS" start="2025-06-11T11:01:37.449577" elapsed="0.002581"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:01:37.452850" level="INFO">Durée du fichier audio à lire: 18.311836734693877 secondes</msg>
<arg>Durée du fichier audio à lire: ${duration} secondes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:01:37.452158" elapsed="0.000692"/>
</kw>
<kw name="Click Record Button">
<kw name="Wait For Record Button">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check Element Exists" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T11:01:37.453373" elapsed="0.646788"/>
</kw>
<arg>${timeout}</arg>
<arg>${QUICK_WAIT}</arg>
<arg>Check Element Exists</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2025-06-11T11:01:37.452850" elapsed="0.647311"/>
</kw>
<status status="PASS" start="2025-06-11T11:01:37.452850" elapsed="0.647311"/>
</kw>
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-11T11:01:38.313076" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T11:01:38.100161" elapsed="0.212915"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton START n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T11:01:38.313076" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-11T11:01:38.313076" elapsed="0.470426"/>
</kw>
<msg time="2025-06-11T11:01:38.783502" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T11:01:38.313076" elapsed="0.470426"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton START</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T11:01:38.784501" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T11:01:37.452850" elapsed="1.331651"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T11:01:40.784982" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T11:01:38.784501" elapsed="2.000481"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Play Audio" owner="Integration">
<msg time="2025-06-11T11:01:59.262471" level="INFO">✅ Lecture audio réussie : Lecture du fichier test.wav terminée</msg>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Joue un fichier audio via l'API Flask.</doc>
<status status="PASS" start="2025-06-11T11:01:40.784982" elapsed="18.477489"/>
</kw>
<msg time="2025-06-11T11:01:59.262471" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>play_audio</arg>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T11:01:40.784982" elapsed="18.477489"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>La lecture audio a échoué</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T11:01:59.263003" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T11:02:17.575424" level="INFO">Slept 18 seconds 312 milliseconds.</msg>
<arg>${duration}s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T11:01:59.263003" elapsed="18.312951"/>
</kw>
<kw name="Click Stop Button">
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-11T11:02:17.634664" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T11:02:17.576480" elapsed="0.058184"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton STOP n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T11:02:17.634664" elapsed="0.000996"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-11T11:02:17.635660" elapsed="0.459013"/>
</kw>
<msg time="2025-06-11T11:02:18.094673" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T11:02:17.635660" elapsed="0.459013"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton STOP</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T11:02:18.094673" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T11:02:17.575954" elapsed="0.518719"/>
</kw>
<status status="PASS" start="2025-06-11T11:01:37.448993" elapsed="40.645680"/>
</kw>
<kw name="Compare Audio Files">
<kw name="Compare With Latest Recorded" owner="TestAudio">
<msg time="2025-06-11T11:02:52.908311" level="INFO">Graphiques sauvegardés dans: C:\Users\bahae\Documents\PfeProject\test_cases\..\log\plots\audio_comparison_enregistrement_20250611_110237.png</msg>
<msg time="2025-06-11T11:02:52.908820" level="INFO">============================= Début du test audio ==============================
Original: C:\Users\bahae\Documents\PfeProject\test_cases\test.wav
Enregistré: latest_download.wav
Date du test: 2025-06-11 11:02:20

Original - Durée: 18.31s -&gt; Segment actif: 18.31s
Enregistré - Durée: 39.38s -&gt; Segment actif: 18.16s
Recherche du meilleur alignement...
Alignement initial trouvé, ajustement fin...

Détails de l'alignement:
Position originale: 0.000s
Position enregistrée: -0.045s
Ajustement: -45.4ms
Corrélation initiale: 0.388
Original length: 803058, Recorded length: 803058
Best lag: 175 samples (0.004 seconds)
Final lengths - Original: 802883, Aligned: 802883
Décalage temporel final: 0.004 secondes

=== Résultats ===
Décalage temporel: 0.004 secondes
         snr: 0.8450
 correlation: 0.5605
         mse: 0.0270
        rmse: 0.1642
energy_ratio: 0.8668
    max_diff: 1.3116
   mean_diff: 0.1063
         mos: 3.3063
     clarity: 1.0597
  clarity_db: 0.2520

=== Résultat: ÉCHEC ===
SNR: 0.84 dB (seuil: 5 dB)
Corrélation: 0.560 (seuil: 0.8)
MOS: 3.31/5 (seuil: 2.5)
Clarté: 1.060 (seuil: 0.7)</msg>
<msg time="2025-06-11T11:02:52.908832" level="INFO">C:\Users\bahae\Documents\PfeProject\test_cases\TestAudio.py:338: UserWarning: Glyph 10060 (\N{CROSS MARK}) missing from font(s) DejaVu Sans.
  plt.savefig(output_file, dpi=300, bbox_inches='tight')
C:\Program Files\JetBrains\PyCharm 2024.3.2\plugins\python-ce\helpers\pycharm_matplotlib_backend\backend_interagg.py:124: UserWarning: Glyph 10060 (\N{CROSS MARK}) missing from font(s) DejaVu Sans.
  FigureCanvasAgg.draw(self)</msg>
<msg time="2025-06-11T11:02:52.908832" level="INFO">${test_passed} = False</msg>
<msg time="2025-06-11T11:02:52.908832" level="INFO">${metrics} = {'snr': 0.8449576394448811, 'correlation': 0.5604579697065337, 'mse': 0.026954401149108704, 'rmse': 0.1641779557343455, 'energy_ratio': 0.8667854037030414, 'max_diff': 1.3115879241823452, 'mean_diff':...</msg>
<var>${test_passed}</var>
<var>${metrics}</var>
<arg>${original_audio}</arg>
<doc>Télécharge le dernier audio enregistré via l'API Flask et le compare à l'original.
:param original_audio: Chemin du fichier original (wav)
:param latest_audio_path: Chemin où sauvegarder le fichier téléchargé
:param api_url: URL de l'API Flask pour récupérer le dernier audio enregistré
:return: (test_passed, metrics)</doc>
<status status="PASS" start="2025-06-11T11:02:18.095667" elapsed="34.813165"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.909881" level="INFO">SNR: 0.8449576394448811 dB (seuil: 20 dB)</msg>
<arg>SNR: ${metrics['snr']} dB (seuil: 20 dB)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:02:52.908832" elapsed="0.001049"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.909881" level="INFO">Corrélation: 0.5604579697065337 (seuil: 0.9)</msg>
<arg>Corrélation: ${metrics['correlation']} (seuil: 0.9)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:02:52.909881" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.909881" level="INFO">MOS: 3.3063478692256356/5 (seuil: 3.0)</msg>
<arg>MOS: ${metrics['mos']}/5 (seuil: 3.0)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:02:52.909881" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.910873" level="INFO">Clarté: 1.059739542615287 (seuil: 0.8)</msg>
<arg>Clarté: ${metrics['clarity']} (seuil: 0.8)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:02:52.909881" elapsed="0.000992"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.911888" level="INFO">${snr_ok} = False</msg>
<var>${snr_ok}</var>
<arg>${metrics['snr']} &gt;= 20</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T11:02:52.910873" elapsed="0.001015"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.912899" level="INFO">${correlation_ok} = False</msg>
<var>${correlation_ok}</var>
<arg>${metrics['correlation']} &gt;= 0.9</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T11:02:52.911888" elapsed="0.001011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.912899" level="INFO">${mos_ok} = True</msg>
<var>${mos_ok}</var>
<arg>${metrics['mos']} &gt;= 3.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T11:02:52.912899" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.913894" level="INFO">${clarity_ok} = True</msg>
<var>${clarity_ok}</var>
<arg>${metrics['clarity']} &gt;= 0.8</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T11:02:52.912899" elapsed="0.000995"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.913894" level="INFO">${test_passed} = False</msg>
<var>${test_passed}</var>
<arg>${snr_ok} and ${correlation_ok} and ${mos_ok} and ${clarity_ok}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T11:02:52.913894" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="not ${test_passed}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.914898" level="INFO">❌ Test échoué - Métriques critiques non satisfaites</msg>
<arg>❌ Test échoué - Métriques critiques non satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:02:52.914898" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.915875" level="FAIL">Test audio échoué - Vérifiez les métriques dans les logs</msg>
<arg>Test audio échoué - Vérifiez les métriques dans les logs</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-11T11:02:52.914898" elapsed="0.000977">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<status status="FAIL" start="2025-06-11T11:02:52.913894" elapsed="0.001981">Test audio échoué - Vérifiez les métriques dans les logs</status>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Test réussi - Toutes les métriques sont satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:02:52.915875" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T11:02:52.915875" elapsed="0.000000"/>
</branch>
<status status="FAIL" start="2025-06-11T11:02:52.913894" elapsed="0.001981">Test audio échoué - Vérifiez les métriques dans les logs</status>
</if>
<return>
<value>${test_passed}</value>
<value>${metrics}</value>
<status status="NOT RUN" start="2025-06-11T11:02:52.915875" elapsed="0.000000"/>
</return>
<var>${result}</var>
<arg>${DEFAULT_OUTPUT_FILE}</arg>
<status status="FAIL" start="2025-06-11T11:02:18.095667" elapsed="34.820208">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>Résultat de la comparaison: ${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:02:52.915875" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2025-06-11T11:01:34.206917" elapsed="78.708958">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<msg time="2025-06-11T11:02:52.915875" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T11:01:34.206651" elapsed="78.709224"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} réussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:02:52.915875" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="NOT RUN" start="2025-06-11T11:02:52.915875" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T11:02:52.915875" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.916930" level="INFO">${attempt} = 2</msg>
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T11:02:52.916930" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} échoué - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:02:52.916930" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-11T11:02:52.916930" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T11:02:52.916930" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-11T11:02:52.916930" elapsed="0.000000"/>
</if>
<status status="PASS" start="2025-06-11T11:02:52.916911" elapsed="0.000019"/>
</branch>
<status status="PASS" start="2025-06-11T11:02:52.915875" elapsed="0.001055"/>
</if>
<var name="${index}">0</var>
<status status="PASS" start="2025-06-11T11:01:34.206116" elapsed="78.710814"/>
</iter>
<var>${index}</var>
<value>${MAX_RETRIES}</value>
<status status="PASS" start="2025-06-11T11:01:34.206116" elapsed="78.710814"/>
</for>
<if>
<branch type="IF" condition="not ${test_status}">
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-11T11:02:52.916930" level="FAIL">Le test Test Audio Recording And Playback a échoué après 1 tentatives</msg>
<arg>Le test ${test_name} a échoué après ${MAX_RETRIES} tentatives</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-11T11:02:52.916930" elapsed="0.000000">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</kw>
<status status="FAIL" start="2025-06-11T11:02:52.916930" elapsed="0.000000">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</branch>
<status status="FAIL" start="2025-06-11T11:02:52.916930" elapsed="0.000000">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</if>
<arg>Verify Audio Recording</arg>
<arg>Test Audio Recording And Playback</arg>
<status status="FAIL" start="2025-06-11T11:01:34.205407" elapsed="78.711523">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</kw>
<doc>Verifies audio recording and playback functionality
- Navigates to audio recording app
- Records audio for a specified duration
- Plays back the recorded audio
- Supports both French and English interfaces</doc>
<tag>audio</tag>
<tag>playback</tag>
<tag>recording</tag>
<status status="FAIL" start="2025-06-11T11:01:34.200161" elapsed="78.717797">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</test>
<test id="s1-t3" name="Test Audio Player And Playback" line="250">
<kw name="Navigate To Audio Player App">
<kw name="Start Activity Code" owner="Integration">
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<doc>Lance une activité spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-11T11:02:52.917958" elapsed="0.054294"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T11:02:55.973385" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T11:02:52.973245" elapsed="3.000140"/>
</kw>
<kw name="Print Activity" owner="Integration">
<msg time="2025-06-11T11:02:56.054264" level="INFO">${current_activity} = com.example.audioapplicationtest/.AudioPlayerActivity</msg>
<var>${current_activity}</var>
<arg>${driver}</arg>
<doc>Retourne l'activité complète sous la forme 'com.android.car.messenger/.ui.launcher.MessageLauncherActivity'.</doc>
<status status="PASS" start="2025-06-11T11:02:55.973385" elapsed="0.080879"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${current_activity}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<arg>L'application n'est pas correctement lancée</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-11T11:02:56.054264" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T11:02:52.917958" elapsed="3.136306"/>
</kw>
<kw name="Record Audio" owner="Integration">
<msg time="2025-06-11T11:02:56.058287" level="INFO">✅ Enregistrement audio réussi : Enregistrement audio démarré</msg>
<msg time="2025-06-11T11:02:56.058287" level="INFO">${recording_success} = True</msg>
<var>${recording_success}</var>
<arg>${driver}</arg>
<arg>23</arg>
<doc>Enregistre l'audio du système via l'API Flask.</doc>
<status status="PASS" start="2025-06-11T11:02:56.054264" elapsed="0.004023"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${recording_success}</arg>
<arg>L'enregistrement audio a échoué</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T11:02:56.058287" elapsed="0.000970"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T11:02:57.059528" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T11:02:56.059257" elapsed="1.000271"/>
</kw>
<kw name="Click Play Button">
<kw name="Wait For Record Button">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check Element Exists" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T11:02:57.060559" elapsed="0.057011"/>
</kw>
<arg>${timeout}</arg>
<arg>${QUICK_WAIT}</arg>
<arg>Check Element Exists</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2025-06-11T11:02:57.059528" elapsed="0.058042"/>
</kw>
<status status="PASS" start="2025-06-11T11:02:57.059528" elapsed="0.058042"/>
</kw>
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-11T11:02:57.166288" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T11:02:57.117570" elapsed="0.048718"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton PLAY TEST WAV n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T11:02:57.167311" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-11T11:02:57.167311" elapsed="0.473419"/>
</kw>
<msg time="2025-06-11T11:02:57.640730" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T11:02:57.167311" elapsed="0.473419"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton START</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T11:02:57.640730" elapsed="0.000997"/>
</kw>
<status status="PASS" start="2025-06-11T11:02:57.059528" elapsed="0.582199"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T11:03:19.642023" level="INFO">Slept 22 seconds.</msg>
<arg>22s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T11:02:57.641727" elapsed="22.000296"/>
</kw>
<kw name="Compare Audio Files Play">
<kw name="Compare With Latest Recorded Play" owner="TestAudio">
<msg time="2025-06-11T11:03:52.925391" level="INFO">Graphiques sauvegardés dans: C:\Users\bahae\Documents\PfeProject\test_cases\..\log\plots\audio_comparison_lecture_20250611_110338.png</msg>
<msg time="2025-06-11T11:03:52.925391" level="INFO">============================= Début du test audio ==============================
Original: C:\Users\bahae\Documents\PfeProject\test_cases\test.wav
Enregistré: latest_playback.wav
Date du test: 2025-06-11 11:03:21

Original - Durée: 18.31s -&gt; Segment actif: 18.31s
Enregistré - Durée: 23.00s -&gt; Segment actif: 18.40s
Recherche du meilleur alignement...
Alignement initial trouvé, ajustement fin...

Détails de l'alignement:
Position originale: 0.000s
Position enregistrée: 0.116s
Ajustement: 115.7ms
Corrélation initiale: 0.216
Original length: 806470, Recorded length: 806470
Best lag: -2132 samples (-0.048 seconds)
Final lengths - Original: 806470, Aligned: 806470
Décalage temporel final: -0.048 secondes

=== Résultats ===
Décalage temporel: -0.048 secondes
         snr: -1.6950
 correlation: 0.2599
         mse: 0.0487
        rmse: 0.2208
energy_ratio: 0.9961
    max_diff: 1.4587
   mean_diff: 0.1578
         mos: 2.8440
     clarity: 1.1284
  clarity_db: 0.5247

=== Résultat: ÉCHEC ===
SNR: -1.69 dB (seuil: 5 dB)
Corrélation: 0.260 (seuil: 0.8)
MOS: 2.84/5 (seuil: 2.5)
Clarté: 1.128 (seuil: 0.7)</msg>
<msg time="2025-06-11T11:03:52.926390" level="INFO">${test_passed} = False</msg>
<msg time="2025-06-11T11:03:52.926390" level="INFO">${metrics} = {'snr': -1.6949956990973625, 'correlation': 0.2598677454919698, 'mse': 0.04873990546140963, 'rmse': 0.22077116084627002, 'energy_ratio': 0.9961355567815687, 'max_diff': 1.4587379804318765, 'mean_diff'...</msg>
<var>${test_passed}</var>
<var>${metrics}</var>
<arg>${original_audio}</arg>
<doc>Télécharge le dernier audio lu via l'API Flask et le compare à l'original.
:param original_audio: Chemin du fichier original (wav)
:param latest_audio_path: Chemin où sauvegarder le fichier téléchargé
:param api_url: URL de l'API Flask pour récupérer le dernier audio lu
:return: (test_passed, metrics)</doc>
<status status="PASS" start="2025-06-11T11:03:19.642023" elapsed="33.284367"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:03:52.927390" level="INFO">SNR: -1.6949956990973625 dB (seuil: 20 dB)</msg>
<arg>SNR: ${metrics['snr']} dB (seuil: 20 dB)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:03:52.926390" elapsed="0.001000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:03:52.927390" level="INFO">Corrélation: 0.2598677454919698 (seuil: 0.9)</msg>
<arg>Corrélation: ${metrics['correlation']} (seuil: 0.9)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:03:52.927390" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:03:52.928411" level="INFO">MOS: 2.8440414666264693/5 (seuil: 3.0)</msg>
<arg>MOS: ${metrics['mos']}/5 (seuil: 3.0)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:03:52.927390" elapsed="0.001021"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T11:03:52.928411" level="INFO">Clarté: 1.1284250253667505 (seuil: 0.8)</msg>
<arg>Clarté: ${metrics['clarity']} (seuil: 0.8)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T11:03:52.928411" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T11:03:52.929425" level="FAIL">Resolving variable '${metrics['plot_file']}' failed: KeyError: 'plot_file'</msg>
<var>${plot_file}</var>
<arg>${metrics['plot_file']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="FAIL" start="2025-06-11T11:03:52.928411" elapsed="0.001014">Resolving variable '${metrics['plot_file']}' failed: KeyError: 'plot_file'</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>&lt;img src="${plot_file}" width="800px"/&gt;</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929425" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${snr_ok}</var>
<arg>${metrics['snr']} &gt;= 20</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929425" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${correlation_ok}</var>
<arg>${metrics['correlation']} &gt;= 0.9</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929425" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${mos_ok}</var>
<arg>${metrics['mos']} &gt;= 3.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929425" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${clarity_ok}</var>
<arg>${metrics['clarity']} &gt;= 0.8</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929425" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${test_passed}</var>
<arg>${snr_ok} and ${correlation_ok} and ${mos_ok} and ${clarity_ok}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929425" elapsed="0.000522"/>
</kw>
<if>
<branch type="IF" condition="not ${test_passed}">
<kw name="Log" owner="BuiltIn">
<arg>❌ Test échoué - Métriques critiques non satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929962" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test audio échoué - Vérifiez les métriques dans les logs</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929962" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T11:03:52.929962" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Test réussi - Toutes les métriques sont satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:52.929962" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T11:03:52.929962" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2025-06-11T11:03:52.929962" elapsed="0.000000"/>
</if>
<return>
<value>${test_passed}</value>
<value>${metrics}</value>
<status status="NOT RUN" start="2025-06-11T11:03:52.929962" elapsed="0.000000"/>
</return>
<arg>C:\\Users\\bahae\\Documents\\PfeProject\\test_cases${/}test.wav</arg>
<status status="FAIL" start="2025-06-11T11:03:19.642023" elapsed="33.287939">Resolving variable '${metrics['plot_file']}' failed: KeyError: 'plot_file'</status>
</kw>
<doc>Verifies audio recording and playback functionality
- Navigates to audio recording app
- Records audio for a specified duration
- Plays audio
- Supports both French and English interfaces</doc>
<tag>audio</tag>
<tag>playback</tag>
<tag>recording</tag>
<status status="FAIL" start="2025-06-11T11:02:52.917958" elapsed="60.012004">Resolving variable '${metrics['plot_file']}' failed: KeyError: 'plot_file'</status>
</test>
<kw name="Fermer Driver" type="TEARDOWN">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Variable Should Exist" owner="BuiltIn">
<arg>${driver}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" start="2025-06-11T11:03:52.931041" elapsed="0.000096"/>
</kw>
<msg time="2025-06-11T11:03:52.931137" level="INFO">${driver_exists} = True</msg>
<var>${driver_exists}</var>
<arg>Variable Should Exist</arg>
<arg>${driver}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T11:03:52.930519" elapsed="0.000618"/>
</kw>
<if>
<branch type="IF" condition="${driver_exists}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Close Driver" owner="Integration">
<arg>${driver}</arg>
<doc>Ferme proprement le driver Appium.</doc>
<status status="PASS" start="2025-06-11T11:03:52.931137" elapsed="0.150962"/>
</kw>
<msg time="2025-06-11T11:03:53.082099" level="INFO">${close_success} = True</msg>
<var>${close_success}</var>
<arg>Close Driver</arg>
<arg>${driver}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T11:03:52.931137" elapsed="0.150962"/>
</kw>
<if>
<branch type="IF" condition="not ${close_success}">
<kw name="Log" owner="BuiltIn">
<arg>Warning: Impossible de fermer proprement le driver Appium</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T11:03:53.082099" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T11:03:53.082099" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-11T11:03:53.082099" elapsed="0.000000"/>
</if>
<status status="PASS" start="2025-06-11T11:03:52.931137" elapsed="0.150962"/>
</branch>
<status status="PASS" start="2025-06-11T11:03:52.931137" elapsed="0.150962"/>
</if>
<status status="PASS" start="2025-06-11T11:03:52.930519" elapsed="0.152581"/>
</kw>
<doc>Tests for audio recording and playback functionality
- Verifies audio recording capabilities
- Verifies audio playback capabilities
- Supports both French and English interfaces</doc>
<status status="FAIL" start="2025-06-11T11:01:17.813650" elapsed="155.269450"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="2" skip="0">audio</stat>
<stat pass="0" fail="2" skip="0">playback</stat>
<stat pass="0" fail="2" skip="0">recording</stat>
</tag>
<suite>
<stat name="TestsAudio" id="s1" pass="1" fail="2" skip="0">TestsAudio</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
