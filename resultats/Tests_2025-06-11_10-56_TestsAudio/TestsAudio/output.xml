<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.12.5 on win32)" generated="2025-06-11T10:56:47.915341" rpa="false" schemaversion="5">
<suite id="s1" name="TestsAudio" source="C:\Users\bahae\Documents\PfeProject\test_cases\TestsAudio.robot">
<kw name="Démarrer Driver" type="SETUP">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:56:51.842783" level="INFO">Tentative d'initialisation du driver Appium...</msg>
<arg>Tentative d'initialisation du driver Appium...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:56:51.841767" elapsed="0.001016"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:56:51.842783" level="INFO">URL Appium: C:\Users\bahae\Documents\PfeProject\test_cases\..\config.py</msg>
<arg>URL Appium: C:\\Users\\bahae\\Documents\\PfeProject\\test_cases${/}..${/}config.py</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:56:51.842783" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Setup Driver" owner="Integration">
<arg>${Device}</arg>
<doc>Initialise et retourne le driver Appium.</doc>
<status status="PASS" start="2025-06-11T10:56:51.843312" elapsed="4.344472"/>
</kw>
<msg time="2025-06-11T10:56:56.187784" level="INFO">${result} = ('PASS', &lt;appium.webdriver.webdriver.WebDriver (session="7c1656ce-7a08-416b-8b6f-aa3947a38a1a")&gt;)</msg>
<var>${result}</var>
<arg>setup driver</arg>
<arg>${Device}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2025-06-11T10:56:51.842783" elapsed="4.345001"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T10:56:56.187784" level="INFO">${status} = PASS</msg>
<msg time="2025-06-11T10:56:56.187784" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="7c1656ce-7a08-416b-8b6f-aa3947a38a1a")&gt;</msg>
<var>${status}</var>
<var>${driver}</var>
<arg>${result}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T10:56:56.187784" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'FAIL'">
<kw name="Log" owner="BuiltIn">
<arg>Échec de l'initialisation du driver: ${driver}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:56:56.187784" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Impossible d'initialiser le driver Appium: ${driver}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-11T10:56:56.187784" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T10:56:56.187784" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-11T10:56:56.187784" elapsed="0.000000"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-11T10:56:56.188868" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="7c1656ce-7a08-416b-8b6f-aa3947a38a1a")&gt;</msg>
<arg>${driver}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-11T10:56:56.188868" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:56:56.188868" level="INFO">Driver Appium initialisé avec succès</msg>
<arg>Driver Appium initialisé avec succès</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:56:56.188868" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T10:56:51.841767" elapsed="4.347101"/>
</kw>
<test id="s1-t1" name="Test fgdya" line="236">
<kw name="Close Activity Robot" owner="Integration">
<msg time="2025-06-11T10:56:58.139726" level="INFO">Échec de terminateApp: Message: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
Stacktrace:
BadParametersError: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
    at checkParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:155:9)
    at validateExecuteMethodParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:242:5)
    at AndroidUiautomator2Driver.executeMethod (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\commands\execute.ts:34:45)
    at AndroidUiautomator2Driver.execute (C:\Users\bahae\.appium\node_modules\appium-uiautomator2-driver\node_modules\appium-android-driver\lib\commands\execute.js:17:23)
    at runCommandPromise (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:115:20)
    at C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:171:12
    at AsyncLock._promiseTry (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:306:31)
    at exec (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:170:9)
    at AsyncLock.acquire (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:189:3)
    at AndroidUiautomator2Driver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:159:39)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at defaultBehavior (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:787:14)
    at AppiumDriver.executeWrappedCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:900:16)
    at AppiumDriver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:799:17)
    at asyncHandler (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:387:19)
Touche HOME pressée
Application com.example.audioapplicationtest fermée avec force-stop
Application com.example.audioapplicationtest fermée avec succès</msg>
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest</arg>
<doc>Version de close_activity adaptée pour Robot Framework.
Utilise plusieurs méthodes pour s'assurer que l'application est bien fermée.</doc>
<status status="PASS" start="2025-06-11T10:56:56.188868" elapsed="1.950858"/>
</kw>
<status status="PASS" start="2025-06-11T10:56:56.188868" elapsed="1.950858"/>
</test>
<test id="s1-t2" name="Test Audio Recording And Playback" line="239">
<kw name="Close Activity" owner="Integration">
<msg time="2025-06-11T10:56:58.148709" level="INFO">Erreur lors de la fermeture de l'application com.example.audioapplicationtest/.AudioPlayerActivity: Message: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
Stacktrace:
BadParametersError: The following required parameter is missing: ["appId"]
Known required parameters are: ["appId"]
Known optional parameters are: ["timeout"]
You have provided none
    at checkParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:155:9)
    at validateExecuteMethodParams (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:242:5)
    at AndroidUiautomator2Driver.executeMethod (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\commands\execute.ts:34:45)
    at AndroidUiautomator2Driver.execute (C:\Users\bahae\.appium\node_modules\appium-uiautomator2-driver\node_modules\appium-android-driver\lib\commands\execute.js:17:23)
    at runCommandPromise (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:115:20)
    at C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:171:12
    at AsyncLock._promiseTry (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:306:31)
    at exec (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:170:9)
    at AsyncLock.acquire (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\async-lock\lib\index.js:189:3)
    at AndroidUiautomator2Driver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\basedriver\driver.ts:159:39)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at defaultBehavior (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:787:14)
    at AppiumDriver.executeWrappedCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:900:16)
    at AppiumDriver.executeCommand (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\lib\appium.js:799:17)
    at asyncHandler (C:\Users\bahae\AppData\Roaming\npm\node_modules\appium\node_modules\@appium\base-driver\lib\protocol\protocol.js:387:19)</msg>
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<doc>Ferme une application spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-11T10:56:58.140728" elapsed="0.008959"/>
</kw>
<kw name="Execute Test With Retry">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T10:56:58.149687" level="INFO">${attempt} = 1</msg>
<var>${attempt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T10:56:58.149687" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T10:56:58.150687" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${FALSE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-11T10:56:58.149687" elapsed="0.001000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Verify Audio Recording">
<kw name="Initialize Language Settings">
<kw name="Get System Language" owner="Integration">
<msg time="2025-06-11T10:56:58.200826" level="INFO">${lang} = eng</msg>
<var>${lang}</var>
<arg>${Device}</arg>
<status status="PASS" start="2025-06-11T10:56:58.150687" elapsed="0.050139"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-06-11T10:56:58.200826" level="INFO">${lang_dict} = {'System': 'System', 'Setting': 'Settings', 'Audio': 'Recording', 'Record': 'START', 'Stop': 'STOP', 'Play': 'Play'}</msg>
<var>${lang_dict}</var>
<arg>'${lang}' == 'fr'</arg>
<arg>${LANG_FR}</arg>
<arg>${LANG_EN}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-06-11T10:56:58.200826" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-11T10:56:58.201826" level="INFO">${LANG_DICT} = {'System': 'System', 'Setting': 'Settings', 'Audio': 'Recording', 'Record': 'START', 'Stop': 'STOP', 'Play': 'Play'}</msg>
<arg>${LANG_DICT}</arg>
<arg>${lang_dict}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-11T10:56:58.200826" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2025-06-11T10:56:58.150687" elapsed="0.051139"/>
</kw>
<kw name="Navigate To Audio App">
<kw name="Start Activity Code" owner="Integration">
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.MainActivity</arg>
<doc>Lance une activité spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-11T10:56:58.201826" elapsed="0.100760"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T10:57:01.303495" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T10:56:58.302586" elapsed="3.000909"/>
</kw>
<kw name="Print Activity" owner="Integration">
<msg time="2025-06-11T10:57:01.396445" level="INFO">${current_activity} = com.example.audioapplicationtest/.MainActivity</msg>
<var>${current_activity}</var>
<arg>${driver}</arg>
<doc>Retourne l'activité complète sous la forme 'com.android.car.messenger/.ui.launcher.MessageLauncherActivity'.</doc>
<status status="PASS" start="2025-06-11T10:57:01.303495" elapsed="0.092950"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${current_activity}</arg>
<arg>com.example.audioapplicationtest/.MainActivity</arg>
<arg>L'application n'est pas correctement lancée</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-11T10:57:01.397445" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T10:56:58.201826" elapsed="3.195619"/>
</kw>
<kw name="Start Audio Recording And Playback">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:57:01.397445" level="INFO">Démarrage de l'enregistrement audio...</msg>
<arg>Démarrage de l'enregistrement audio...</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:57:01.397445" elapsed="0.000000"/>
</kw>
<kw name="Get Audio File Duration">
<kw name="Get Audio Duration" owner="Integration">
<msg time="2025-06-11T10:57:01.398514" level="INFO">✅ Durée du fichier audio C:\Users\bahae\Documents\PfeProject\test_cases\test.wav: 18.31 secondes</msg>
<msg time="2025-06-11T10:57:01.398514" level="INFO">${duration} = 18.311836734693877</msg>
<var>${duration}</var>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Obtient la durée d'un fichier audio en secondes.</doc>
<status status="PASS" start="2025-06-11T10:57:01.397445" elapsed="0.001069"/>
</kw>
<kw name="Should Not Be Equal As Numbers" owner="BuiltIn">
<msg time="2025-06-11T10:57:01.399531" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<arg>${duration}</arg>
<arg>0</arg>
<arg>Impossible d'obtenir la durée du fichier audio</arg>
<doc>Fails if objects are equal after converting them to real numbers.</doc>
<status status="PASS" start="2025-06-11T10:57:01.399531" elapsed="0.000000"/>
</kw>
<return>
<value>${duration}</value>
<status status="PASS" start="2025-06-11T10:57:01.399531" elapsed="0.000000"/>
</return>
<msg time="2025-06-11T10:57:01.399531" level="INFO">${duration} = 18.311836734693877</msg>
<var>${duration}</var>
<arg>${audio_file}</arg>
<status status="PASS" start="2025-06-11T10:57:01.397445" elapsed="0.002086"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:57:01.399531" level="INFO">Durée du fichier audio à lire: 18.311836734693877 secondes</msg>
<arg>Durée du fichier audio à lire: ${duration} secondes</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:57:01.399531" elapsed="0.000000"/>
</kw>
<kw name="Click Record Button">
<kw name="Wait For Record Button">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check Element Exists" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T10:57:01.400529" elapsed="0.627063"/>
</kw>
<arg>${timeout}</arg>
<arg>${QUICK_WAIT}</arg>
<arg>Check Element Exists</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2025-06-11T10:57:01.399531" elapsed="0.628061"/>
</kw>
<status status="PASS" start="2025-06-11T10:57:01.399531" elapsed="0.628061"/>
</kw>
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-11T10:57:02.177906" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T10:57:02.027592" elapsed="0.150314"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton START n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T10:57:02.177906" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-11T10:57:02.178922" elapsed="0.516629"/>
</kw>
<msg time="2025-06-11T10:57:02.695551" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T10:57:02.178922" elapsed="0.516629"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton START</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T10:57:02.696555" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T10:57:01.399531" elapsed="1.297024"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T10:57:04.697161" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T10:57:02.696555" elapsed="2.000606"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Play Audio" owner="Integration">
<msg time="2025-06-11T10:57:23.123498" level="INFO">✅ Lecture audio réussie : Lecture du fichier test.wav terminée</msg>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Joue un fichier audio via l'API Flask.</doc>
<status status="PASS" start="2025-06-11T10:57:04.697668" elapsed="18.425830"/>
</kw>
<msg time="2025-06-11T10:57:23.123498" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>play_audio</arg>
<arg>${driver}</arg>
<arg>${audio_file}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T10:57:04.697161" elapsed="18.426337"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>La lecture audio a échoué</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T10:57:23.123498" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T10:57:41.435944" level="INFO">Slept 18 seconds 312 milliseconds.</msg>
<arg>${duration}s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T10:57:23.123498" elapsed="18.312446"/>
</kw>
<kw name="Click Stop Button">
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-11T10:57:41.503768" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T10:57:41.435944" elapsed="0.067824"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton STOP n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T10:57:41.503768" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-11T10:57:41.503768" elapsed="0.491310"/>
</kw>
<msg time="2025-06-11T10:57:41.995078" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="STOP"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T10:57:41.503768" elapsed="0.491310"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton STOP</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T10:57:41.995667" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T10:57:41.435944" elapsed="0.559723"/>
</kw>
<status status="PASS" start="2025-06-11T10:57:01.397445" elapsed="40.598222"/>
</kw>
<kw name="Compare Audio Files">
<kw name="Compare With Latest Recorded" owner="TestAudio">
<msg time="2025-06-11T10:58:17.808326" level="INFO">Graphiques sauvegardés dans: C:\Users\bahae\Documents\PfeProject\test_cases\..\log\plots\audio_comparison_enregistrement_20250611_105801.png</msg>
<msg time="2025-06-11T10:58:17.808326" level="INFO">============================= Début du test audio ==============================
Original: C:\Users\bahae\Documents\PfeProject\test_cases\test.wav
Enregistré: latest_download.wav
Date du test: 2025-06-11 10:57:44

Original - Durée: 18.31s -&gt; Segment actif: 18.31s
Enregistré - Durée: 39.25s -&gt; Segment actif: 18.17s
Recherche du meilleur alignement...
Alignement initial trouvé, ajustement fin...

Détails de l'alignement:
Position originale: 0.000s
Position enregistrée: -0.052s
Ajustement: -52.3ms
Corrélation initiale: 0.265
Original length: 803444, Recorded length: 803444
Best lag: 860 samples (0.020 seconds)
Final lengths - Original: 802584, Aligned: 802584
Décalage temporel final: 0.020 secondes

=== Résultats ===
Décalage temporel: 0.020 secondes
         snr: -0.8871
 correlation: 0.3444
         mse: 0.0401
        rmse: 0.2004
energy_ratio: 0.8686
    max_diff: 1.4663
   mean_diff: 0.1468
         mos: 2.9778
     clarity: 1.0284
  clarity_db: 0.1215

=== Résultat: ÉCHEC ===
SNR: -0.89 dB (seuil: 5 dB)
Corrélation: 0.344 (seuil: 0.8)
MOS: 2.98/5 (seuil: 2.5)
Clarté: 1.028 (seuil: 0.7)</msg>
<msg time="2025-06-11T10:58:17.809324" level="INFO">C:\Users\bahae\Documents\PfeProject\test_cases\TestAudio.py:338: UserWarning: Glyph 10060 (\N{CROSS MARK}) missing from font(s) DejaVu Sans.
  plt.savefig(output_file, dpi=300, bbox_inches='tight')
C:\Program Files\JetBrains\PyCharm 2024.3.2\plugins\python-ce\helpers\pycharm_matplotlib_backend\backend_interagg.py:124: UserWarning: Glyph 10060 (\N{CROSS MARK}) missing from font(s) DejaVu Sans.
  FigureCanvasAgg.draw(self)</msg>
<msg time="2025-06-11T10:58:17.809324" level="INFO">${test_passed} = False</msg>
<msg time="2025-06-11T10:58:17.809324" level="INFO">${metrics} = {'snr': -0.8871300464346143, 'correlation': 0.3444212551363633, 'mse': 0.04014374626698807, 'rmse': 0.20035904338708566, 'energy_ratio': 0.8686329951155769, 'max_diff': 1.466337024366707, 'mean_diff':...</msg>
<var>${test_passed}</var>
<var>${metrics}</var>
<arg>${original_audio}</arg>
<doc>Télécharge le dernier audio enregistré via l'API Flask et le compare à l'original.
:param original_audio: Chemin du fichier original (wav)
:param latest_audio_path: Chemin où sauvegarder le fichier téléchargé
:param api_url: URL de l'API Flask pour récupérer le dernier audio enregistré
:return: (test_passed, metrics)</doc>
<status status="PASS" start="2025-06-11T10:57:41.995667" elapsed="35.813657"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.809324" level="INFO">SNR: -0.8871300464346143 dB (seuil: 20 dB)</msg>
<arg>SNR: ${metrics['snr']} dB (seuil: 20 dB)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:17.809324" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.810385" level="INFO">Corrélation: 0.3444212551363633 (seuil: 0.9)</msg>
<arg>Corrélation: ${metrics['correlation']} (seuil: 0.9)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:17.809324" elapsed="0.001061"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.810385" level="INFO">MOS: 2.9778203043062517/5 (seuil: 3.0)</msg>
<arg>MOS: ${metrics['mos']}/5 (seuil: 3.0)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:17.810385" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.811391" level="INFO">Clarté: 1.0283749364108465 (seuil: 0.8)</msg>
<arg>Clarté: ${metrics['clarity']} (seuil: 0.8)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:17.810385" elapsed="0.001006"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.811391" level="INFO">${snr_ok} = False</msg>
<var>${snr_ok}</var>
<arg>${metrics['snr']} &gt;= 20</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T10:58:17.811391" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.812663" level="INFO">${correlation_ok} = False</msg>
<var>${correlation_ok}</var>
<arg>${metrics['correlation']} &gt;= 0.9</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T10:58:17.811391" elapsed="0.001272"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.812663" level="INFO">${mos_ok} = False</msg>
<var>${mos_ok}</var>
<arg>${metrics['mos']} &gt;= 3.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T10:58:17.812663" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.813675" level="INFO">${clarity_ok} = True</msg>
<var>${clarity_ok}</var>
<arg>${metrics['clarity']} &gt;= 0.8</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T10:58:17.812663" elapsed="0.001012"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.813675" level="INFO">${test_passed} = False</msg>
<var>${test_passed}</var>
<arg>${snr_ok} and ${correlation_ok} and ${mos_ok} and ${clarity_ok}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T10:58:17.813675" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="not ${test_passed}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.814689" level="INFO">❌ Test échoué - Métriques critiques non satisfaites</msg>
<arg>❌ Test échoué - Métriques critiques non satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:17.813675" elapsed="0.001014"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.814689" level="FAIL">Test audio échoué - Vérifiez les métriques dans les logs</msg>
<arg>Test audio échoué - Vérifiez les métriques dans les logs</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-11T10:58:17.814689" elapsed="0.000000">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<status status="FAIL" start="2025-06-11T10:58:17.813675" elapsed="0.001014">Test audio échoué - Vérifiez les métriques dans les logs</status>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Test réussi - Toutes les métriques sont satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:17.814689" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T10:58:17.814689" elapsed="0.000000"/>
</branch>
<status status="FAIL" start="2025-06-11T10:58:17.813675" elapsed="0.001014">Test audio échoué - Vérifiez les métriques dans les logs</status>
</if>
<return>
<value>${test_passed}</value>
<value>${metrics}</value>
<status status="NOT RUN" start="2025-06-11T10:58:17.814689" elapsed="0.000000"/>
</return>
<var>${result}</var>
<arg>${DEFAULT_OUTPUT_FILE}</arg>
<status status="FAIL" start="2025-06-11T10:57:41.995667" elapsed="35.819022">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>Résultat de la comparaison: ${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:17.814689" elapsed="0.000000"/>
</kw>
<status status="FAIL" start="2025-06-11T10:56:58.150687" elapsed="79.664002">Test audio échoué - Vérifiez les métriques dans les logs</status>
</kw>
<msg time="2025-06-11T10:58:17.815655" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T10:56:58.150687" elapsed="79.664968"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} réussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.815655" level="INFO">${attempt} = 2</msg>
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} échoué - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</if>
<status status="PASS" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-11T10:58:17.815655" elapsed="0.000000"/>
</if>
<var name="${index}">0</var>
<status status="PASS" start="2025-06-11T10:56:58.150687" elapsed="79.664968"/>
</iter>
<var>${index}</var>
<value>${MAX_RETRIES}</value>
<status status="PASS" start="2025-06-11T10:56:58.150687" elapsed="79.664968"/>
</for>
<if>
<branch type="IF" condition="not ${test_status}">
<kw name="Fail" owner="BuiltIn">
<msg time="2025-06-11T10:58:17.816682" level="FAIL">Le test Test Audio Recording And Playback a échoué après 1 tentatives</msg>
<arg>Le test ${test_name} a échoué après ${MAX_RETRIES} tentatives</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2025-06-11T10:58:17.815655" elapsed="0.001027">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</kw>
<status status="FAIL" start="2025-06-11T10:58:17.815655" elapsed="0.001027">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</branch>
<status status="FAIL" start="2025-06-11T10:58:17.815655" elapsed="0.001027">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</if>
<arg>Verify Audio Recording</arg>
<arg>Test Audio Recording And Playback</arg>
<status status="FAIL" start="2025-06-11T10:56:58.149687" elapsed="79.666995">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</kw>
<doc>Verifies audio recording and playback functionality
- Navigates to audio recording app
- Records audio for a specified duration
- Plays back the recorded audio
- Supports both French and English interfaces</doc>
<tag>audio</tag>
<tag>playback</tag>
<tag>recording</tag>
<status status="FAIL" start="2025-06-11T10:56:58.140728" elapsed="79.675954">Le test Test Audio Recording And Playback a échoué après 1 tentatives</status>
</test>
<test id="s1-t3" name="Test Audio Player And Playback" line="250">
<kw name="Navigate To Audio Player App">
<kw name="Start Activity Code" owner="Integration">
<arg>${driver}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<doc>Lance une activité spécifique sur un appareil Android via Appium.</doc>
<status status="PASS" start="2025-06-11T10:58:17.817440" elapsed="0.094583"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T10:58:20.912418" level="INFO">Slept 3 seconds.</msg>
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T10:58:17.912023" elapsed="3.000395"/>
</kw>
<kw name="Print Activity" owner="Integration">
<msg time="2025-06-11T10:58:21.027819" level="INFO">${current_activity} = com.example.audioapplicationtest/.AudioPlayerActivity</msg>
<var>${current_activity}</var>
<arg>${driver}</arg>
<doc>Retourne l'activité complète sous la forme 'com.android.car.messenger/.ui.launcher.MessageLauncherActivity'.</doc>
<status status="PASS" start="2025-06-11T10:58:20.913214" elapsed="0.114605"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${current_activity}</arg>
<arg>com.example.audioapplicationtest/.AudioPlayerActivity</arg>
<arg>L'application n'est pas correctement lancée</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-11T10:58:21.027819" elapsed="0.000991"/>
</kw>
<status status="PASS" start="2025-06-11T10:58:17.817440" elapsed="3.211370"/>
</kw>
<kw name="Record Audio" owner="Integration">
<msg time="2025-06-11T10:58:21.032811" level="INFO">✅ Enregistrement audio réussi : Enregistrement audio démarré</msg>
<msg time="2025-06-11T10:58:21.032811" level="INFO">${recording_success} = True</msg>
<var>${recording_success}</var>
<arg>${driver}</arg>
<arg>23</arg>
<doc>Enregistre l'audio du système via l'API Flask.</doc>
<status status="PASS" start="2025-06-11T10:58:21.028810" elapsed="0.004001"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${recording_success}</arg>
<arg>L'enregistrement audio a échoué</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T10:58:21.032811" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T10:58:22.034558" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T10:58:21.032811" elapsed="1.001747"/>
</kw>
<kw name="Click Play Button">
<kw name="Wait For Record Button">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Check Element Exists" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T10:58:22.035184" elapsed="0.060008"/>
</kw>
<arg>${timeout}</arg>
<arg>${QUICK_WAIT}</arg>
<arg>Check Element Exists</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="START"]</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2025-06-11T10:58:22.035184" elapsed="0.060993"/>
</kw>
<status status="PASS" start="2025-06-11T10:58:22.034558" elapsed="0.061619"/>
</kw>
<kw name="Check Element Exists" owner="Integration">
<msg time="2025-06-11T10:58:22.148537" level="INFO">${button_exists} = True</msg>
<var>${button_exists}</var>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Vérifie si un élément existe en utilisant le XPath donné.</doc>
<status status="PASS" start="2025-06-11T10:58:22.096177" elapsed="0.052360"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${button_exists}</arg>
<arg>Le bouton PLAY TEST WAV n'est pas visible</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T10:58:22.148537" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Click Element By Xpath Bounds" owner="Integration">
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Trouve un élément par XPath et clique dessus en utilisant ses bounds.</doc>
<status status="PASS" start="2025-06-11T10:58:22.149063" elapsed="0.490715"/>
</kw>
<msg time="2025-06-11T10:58:22.639778" level="INFO">${success} = True</msg>
<var>${success}</var>
<arg>click_element_by_xpath_bounds</arg>
<arg>${driver}</arg>
<arg>//android.widget.Button[@text="PLAY TEST WAV"]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T10:58:22.148537" elapsed="0.491241"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${success}</arg>
<arg>Impossible de cliquer sur le bouton START</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-11T10:58:22.639778" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-06-11T10:58:22.034558" elapsed="0.605220"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-06-11T10:58:44.641751" level="INFO">Slept 22 seconds.</msg>
<arg>22s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-06-11T10:58:22.639778" elapsed="22.001973"/>
</kw>
<kw name="Compare Audio Files Play">
<kw name="Compare With Latest Recorded Play" owner="TestAudio">
<msg time="2025-06-11T10:58:56.815227" level="INFO">Graphiques sauvegardés dans: C:\Users\bahae\Documents\PfeProject\test_cases\..\log\plots\audio_comparison_lecture_20250611_105850.png</msg>
<msg time="2025-06-11T10:58:56.815227" level="INFO">============================= Début du test audio ==============================
Original: C:\Users\bahae\Documents\PfeProject\test_cases\test.wav
Enregistré: latest_playback.wav
Date du test: 2025-06-11 10:58:46

Original - Durée: 18.31s -&gt; Segment actif: 18.31s
Enregistré - Durée: 23.00s -&gt; Segment actif: 4.89s
Recherche du meilleur alignement...
Alignement initial trouvé, ajustement fin...

Détails de l'alignement:
Position originale: 0.000s
Position enregistrée: -0.420s
Ajustement: -419.6ms
Corrélation initiale: 0.034
Original length: 233934, Recorded length: 233934
Best lag: 25846 samples (0.586 seconds)
Final lengths - Original: 208088, Aligned: 208088
Décalage temporel final: 0.586 secondes

=== Résultats ===
Décalage temporel: 0.586 secondes
         snr: -5.8017
 correlation: 0.0679
         mse: 0.0612
        rmse: 0.2475
energy_ratio: 3.0403
    max_diff: 1.1175
   mean_diff: 0.1923
         mos: 2.4494
     clarity: 2.5742
  clarity_db: 4.1065

=== Résultat: ÉCHEC ===
SNR: -5.80 dB (seuil: 5 dB)
Corrélation: 0.068 (seuil: 0.8)
MOS: 2.45/5 (seuil: 2.5)
Clarté: 2.574 (seuil: 0.7)</msg>
<msg time="2025-06-11T10:58:56.815227" level="INFO">${test_passed} = False</msg>
<msg time="2025-06-11T10:58:56.815227" level="INFO">${metrics} = {'snr': -5.801734039377903, 'correlation': 0.0679229930096375, 'mse': 0.061247854309753796, 'rmse': 0.24748303842840177, 'energy_ratio': 3.040280291383033, 'max_diff': 1.1174640408347656, 'mean_diff':...</msg>
<var>${test_passed}</var>
<var>${metrics}</var>
<arg>${original_audio}</arg>
<doc>Télécharge le dernier audio lu via l'API Flask et le compare à l'original.
:param original_audio: Chemin du fichier original (wav)
:param latest_audio_path: Chemin où sauvegarder le fichier téléchargé
:param api_url: URL de l'API Flask pour récupérer le dernier audio lu
:return: (test_passed, metrics)</doc>
<status status="PASS" start="2025-06-11T10:58:44.642444" elapsed="12.172783"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:56.816239" level="INFO">SNR: -5.801734039377903 dB (seuil: 20 dB)</msg>
<arg>SNR: ${metrics['snr']} dB (seuil: 20 dB)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:56.816239" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:56.817180" level="INFO">Corrélation: 0.0679229930096375 (seuil: 0.9)</msg>
<arg>Corrélation: ${metrics['correlation']} (seuil: 0.9)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:56.816239" elapsed="0.000941"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:56.817726" level="INFO">MOS: 2.449438230036449/5 (seuil: 3.0)</msg>
<arg>MOS: ${metrics['mos']}/5 (seuil: 3.0)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:56.817180" elapsed="0.000594"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-11T10:58:56.817774" level="INFO">Clarté: 2.574229088552219 (seuil: 0.8)</msg>
<arg>Clarté: ${metrics['clarity']} (seuil: 0.8)</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-11T10:58:56.817774" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-11T10:58:56.817774" level="FAIL">Resolving variable '${metrics['plot_file']}' failed: KeyError: 'plot_file'</msg>
<var>${plot_file}</var>
<arg>${metrics['plot_file']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="FAIL" start="2025-06-11T10:58:56.817774" elapsed="0.000000">Resolving variable '${metrics['plot_file']}' failed: KeyError: 'plot_file'</status>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>&lt;img src="${plot_file}" width="800px"/&gt;</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.817774" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${snr_ok}</var>
<arg>${metrics['snr']} &gt;= 20</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.817774" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${correlation_ok}</var>
<arg>${metrics['correlation']} &gt;= 0.9</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.817774" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${mos_ok}</var>
<arg>${metrics['mos']} &gt;= 3.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.817774" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${clarity_ok}</var>
<arg>${metrics['clarity']} &gt;= 0.8</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.817774" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${test_passed}</var>
<arg>${snr_ok} and ${correlation_ok} and ${mos_ok} and ${clarity_ok}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.818859" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="not ${test_passed}">
<kw name="Log" owner="BuiltIn">
<arg>❌ Test échoué - Métriques critiques non satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.818859" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test audio échoué - Vérifiez les métriques dans les logs</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.818859" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T10:58:56.818859" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>✅ Test réussi - Toutes les métriques sont satisfaites</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:56.818859" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T10:58:56.818859" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2025-06-11T10:58:56.818859" elapsed="0.000000"/>
</if>
<return>
<value>${test_passed}</value>
<value>${metrics}</value>
<status status="NOT RUN" start="2025-06-11T10:58:56.818859" elapsed="0.000000"/>
</return>
<arg>C:\\Users\\bahae\\Documents\\PfeProject\\test_cases${/}test.wav</arg>
<status status="FAIL" start="2025-06-11T10:58:44.641751" elapsed="12.177108">Resolving variable '${metrics['plot_file']}' failed: KeyError: 'plot_file'</status>
</kw>
<doc>Verifies audio recording and playback functionality
- Navigates to audio recording app
- Records audio for a specified duration
- Plays audio
- Supports both French and English interfaces</doc>
<tag>audio</tag>
<tag>playback</tag>
<tag>recording</tag>
<status status="FAIL" start="2025-06-11T10:58:17.816682" elapsed="39.002177">Resolving variable '${metrics['plot_file']}' failed: KeyError: 'plot_file'</status>
</test>
<kw name="Fermer Driver" type="TEARDOWN">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Variable Should Exist" owner="BuiltIn">
<arg>${driver}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" start="2025-06-11T10:58:56.819804" elapsed="0.000000"/>
</kw>
<msg time="2025-06-11T10:58:56.820361" level="INFO">${driver_exists} = True</msg>
<var>${driver_exists}</var>
<arg>Variable Should Exist</arg>
<arg>${driver}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T10:58:56.819804" elapsed="0.000557"/>
</kw>
<if>
<branch type="IF" condition="${driver_exists}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Close Driver" owner="Integration">
<arg>${driver}</arg>
<doc>Ferme proprement le driver Appium.</doc>
<status status="PASS" start="2025-06-11T10:58:56.820361" elapsed="0.207588"/>
</kw>
<msg time="2025-06-11T10:58:57.027949" level="INFO">${close_success} = True</msg>
<var>${close_success}</var>
<arg>Close Driver</arg>
<arg>${driver}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-06-11T10:58:56.820361" elapsed="0.207588"/>
</kw>
<if>
<branch type="IF" condition="not ${close_success}">
<kw name="Log" owner="BuiltIn">
<arg>Warning: Impossible de fermer proprement le driver Appium</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-06-11T10:58:57.027949" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-06-11T10:58:57.027949" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-06-11T10:58:57.027949" elapsed="0.000000"/>
</if>
<status status="PASS" start="2025-06-11T10:58:56.820361" elapsed="0.207588"/>
</branch>
<status status="PASS" start="2025-06-11T10:58:56.820361" elapsed="0.207588"/>
</if>
<status status="PASS" start="2025-06-11T10:58:56.819804" elapsed="0.208145"/>
</kw>
<doc>Tests for audio recording and playback functionality
- Verifies audio recording capabilities
- Verifies audio playback capabilities
- Supports both French and English interfaces</doc>
<status status="FAIL" start="2025-06-11T10:56:47.916333" elapsed="129.111616"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="2" skip="0">audio</stat>
<stat pass="0" fail="2" skip="0">playback</stat>
<stat pass="0" fail="2" skip="0">recording</stat>
</tag>
<suite>
<stat name="TestsAudio" id="s1" pass="1" fail="2" skip="0">TestsAudio</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
