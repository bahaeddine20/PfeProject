<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.12.5 on win32)" generated="2025-05-08T23:07:19.020233" rpa="false" schemaversion="5">
<suite id="s1" name="WiFiAndConnectivite" source="D:\pfe\PfeProject\test_cases\WiFiAndConnectivite.robot">
<kw name="D√©marrer Driver" type="SETUP">
<kw name="Setup Driver" owner="Integration">
<msg time="2025-05-08T23:07:27.601002" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="1cee6bda-3159-482a-ad26-4f2f7c8c3c71")&gt;</msg>
<var>${driver}</var>
<arg>${Device}</arg>
<doc>Initialise et retourne le driver Appium.</doc>
<status status="PASS" start="2025-05-08T23:07:21.970928" elapsed="5.631075"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-05-08T23:07:27.602003" level="INFO">${driver} = &lt;appium.webdriver.webdriver.WebDriver (session="1cee6bda-3159-482a-ad26-4f2f7c8c3c71")&gt;</msg>
<arg>${driver}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-05-08T23:07:27.602003" elapsed="0.000000"/>
</kw>
<kw name="Initialize Language Settings">
<kw name="Get System Language" owner="Integration">
<msg time="2025-05-08T23:07:27.648560" level="INFO">${lang} = fr</msg>
<var>${lang}</var>
<arg>${Device}</arg>
<status status="PASS" start="2025-05-08T23:07:27.602003" elapsed="0.046557"/>
</kw>
<kw name="Set Variable If" owner="BuiltIn">
<msg time="2025-05-08T23:07:27.649558" level="INFO">${lang_dict} = {'System': 'Syst√®me', 'Setting': 'Param√®tres', 'ReseauMenu': 'R√©seau et Internet'}</msg>
<var>${lang_dict}</var>
<arg>'${lang}' == 'fr'</arg>
<arg>${LANG_FR}</arg>
<arg>${LANG_EN}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" start="2025-05-08T23:07:27.648560" elapsed="0.000998"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-05-08T23:07:27.649558" level="INFO">${LANG_DICT} = {'System': 'Syst√®me', 'Setting': 'Param√®tres', 'ReseauMenu': 'R√©seau et Internet'}</msg>
<arg>${LANG_DICT}</arg>
<arg>${lang_dict}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-05-08T23:07:27.649558" elapsed="0.000000"/>
</kw>
<doc>Sets up language-specific variables based on system language</doc>
<status status="PASS" start="2025-05-08T23:07:27.602003" elapsed="0.047555"/>
</kw>
<doc>Initializes the test driver</doc>
<status status="PASS" start="2025-05-08T23:07:21.968929" elapsed="5.680629"/>
</kw>
<test id="s1-t1" name="Test Ouvrir Wifi" line="142">
<kw name="Execute Test With Retry">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-08T23:07:27.650558" level="INFO">${attempt} = 1</msg>
<var>${attempt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-08T23:07:27.650558" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-08T23:07:27.650558" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${FALSE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-08T23:07:27.650558" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Execute Open Wifi Test">
<kw name="Open Application With Click" owner="Integration">
<msg time="2025-05-08T23:07:47.213969" level="INFO">üìå Liste des applications d√©tect√©es : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualit√©s', 'Home Assistant', 'Local Media Player', 'Maps', 'Param√®tres', 'Play\xa0Store', 'Prime Video', 'SMS']
üìå First Home Page d√©tect√©e : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualit√©s', 'Home Assistant', 'Local Media Player', 'Maps', 'Param√®tres', 'Play\xa0Store', 'Prime Video', 'SMS']

üìå Liste des applications d√©tect√©es : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualit√©s', 'Home Assistant', 'Local Media Player', 'Maps', 'Param√®tres', 'Play\xa0Store', 'Prime Video', 'SMS']
‚úÖ Retour √† la first home page !

üìå Liste des applications d√©tect√©es : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualit√©s', 'Home Assistant', 'Local Media Player', 'Maps', 'Param√®tres', 'Play\xa0Store', 'Prime Video', 'SMS']
378 619 522 657</msg>
<msg time="2025-05-08T23:07:47.213969" level="INFO">${resultat} = True</msg>
<var>${resultat}</var>
<arg>${driver}</arg>
<arg>${LANG_DICT.Setting}</arg>
<status status="PASS" start="2025-05-08T23:07:27.651558" elapsed="19.562411"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-08T23:07:47.715534" level="INFO">Slept 500 milliseconds.</msg>
<arg>${QUICK_WAIT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-08T23:07:47.213969" elapsed="0.501565"/>
</kw>
<kw name="Check Element Exists By Id" owner="Integration">
<msg time="2025-05-08T23:07:47.774572" level="INFO">${Verfier} = True</msg>
<var>${Verfier}</var>
<arg>${driver}</arg>
<arg>${Setting_xpath_id}</arg>
<doc>V√©rifie si un √©l√©ment existe en utilisant son ID.</doc>
<status status="PASS" start="2025-05-08T23:07:47.715534" elapsed="0.059038"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${Verfier}</arg>
<arg>Settings screen is not displayed</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-05-08T23:07:47.774572" elapsed="0.001001"/>
</kw>
<kw name="Clique Sur Setting" owner="Integration">
<msg time="2025-05-08T23:07:53.521748" level="INFO">(0, 76, 550, 696)
üîΩ Swipe vers le bas #1
üîΩ Swipe vers le bas #2
‚úÖ 'R√©seau et Internet' trouv√© en bas ! Appui en cours...</msg>
<arg>${driver}</arg>
<arg>${LANG_DICT.ReseauMenu}</arg>
<arg>${Setting_menu}</arg>
<status status="PASS" start="2025-05-08T23:07:47.775573" elapsed="5.747174"/>
</kw>
<kw name="Activer Wifi Si Desactive" owner="Integration">
<msg time="2025-05-08T23:07:54.449640" level="INFO">false</msg>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-08T23:07:53.522747" elapsed="0.926893"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-08T23:07:56.449878" level="INFO">Slept 2 seconds.</msg>
<arg>${WAIT_TIME}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-08T23:07:54.449640" elapsed="2.000238"/>
</kw>
<kw name="Is Active Wifi Ui" owner="Integration">
<msg time="2025-05-08T23:07:58.806510" level="INFO">√âtat actuel du Wi-Fi : true</msg>
<msg time="2025-05-08T23:07:58.806510" level="INFO">${verifier_wifi_ui} = True</msg>
<var>${verifier_wifi_ui}</var>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-08T23:07:56.449878" elapsed="2.356632"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be True" owner="BuiltIn">
<arg>${verifier_wifi_ui}</arg>
<arg>WiFi is not active in UI</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-05-08T23:07:58.806510" elapsed="0.000000"/>
</kw>
<arg>Should Be True</arg>
<arg>${verifier_wifi_ui}</arg>
<arg>WiFi is not active in UI</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2025-05-08T23:07:58.806510" elapsed="0.001000"/>
</kw>
<kw name="Is Wifi Enabled Adb" owner="Integration">
<msg time="2025-05-08T23:07:59.153774" level="INFO">‚úÖ Le Wi-Fi est activ√©.</msg>
<msg time="2025-05-08T23:07:59.153774" level="INFO">${verfier_wifi_adb} = True</msg>
<var>${verfier_wifi_adb}</var>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-08T23:07:58.807510" elapsed="0.346264"/>
</kw>
<kw name="Run Keyword And Continue On Failure" owner="BuiltIn">
<kw name="Should Be True" owner="BuiltIn">
<arg>${verfier_wifi_adb}</arg>
<arg>WiFi is not active via ADB</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-05-08T23:07:59.154774" elapsed="0.000000"/>
</kw>
<arg>Should Be True</arg>
<arg>${verfier_wifi_adb}</arg>
<arg>WiFi is not active via ADB</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<status status="PASS" start="2025-05-08T23:07:59.153774" elapsed="0.001000"/>
</kw>
<doc>Tests WiFi activation</doc>
<status status="PASS" start="2025-05-08T23:07:27.651558" elapsed="31.503216"/>
</kw>
<msg time="2025-05-08T23:07:59.154774" level="INFO">${test_status} = True</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-05-08T23:07:27.651558" elapsed="31.503216"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-08T23:07:59.154774" level="INFO">Test Test Ouvrir Wifi r√©ussi</msg>
<arg>Test ${test_name} r√©ussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-08T23:07:59.154774" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<msg time="2025-05-08T23:07:59.154774" level="INFO">Exiting for loop altogether.</msg>
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="PASS" start="2025-05-08T23:07:59.154774" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-05-08T23:07:59.154774" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-05-08T23:07:59.155775" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} √©chou√© - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-08T23:07:59.155775" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-05-08T23:07:59.155775" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-08T23:07:59.155775" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2025-05-08T23:07:59.155775" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2025-05-08T23:07:59.154774" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2025-05-08T23:07:59.154774" elapsed="0.001001"/>
</if>
<var name="${index}">0</var>
<status status="PASS" start="2025-05-08T23:07:27.651558" elapsed="31.504217"/>
</iter>
<var>${index}</var>
<value>${MAX_RETRIES}</value>
<status status="PASS" start="2025-05-08T23:07:27.650558" elapsed="31.505217"/>
</for>
<if>
<branch type="IF" condition="not ${test_status}">
<kw name="Fail" owner="BuiltIn">
<arg>Le test ${test_name} a √©chou√© apr√®s ${MAX_RETRIES} tentatives</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-05-08T23:07:59.155775" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-08T23:07:59.155775" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-08T23:07:59.155775" elapsed="0.000000"/>
</if>
<arg>Execute Open Wifi Test</arg>
<arg>Test Ouvrir Wifi</arg>
<status status="PASS" start="2025-05-08T23:07:27.650558" elapsed="31.505217"/>
</kw>
<doc>Teste l'activation du WiFi
- Ouvre les param√®tres
- Active le WiFi
- V√©rifie l'activation via UI et ADB</doc>
<tag>smoke</tag>
<tag>wifi</tag>
<status status="PASS" start="2025-05-08T23:07:27.649558" elapsed="31.507234"/>
</test>
<test id="s1-t2" name="Test Fermer Wifi" line="150">
<kw name="Execute Test With Retry">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-08T23:07:59.157774" level="INFO">${attempt} = 1</msg>
<var>${attempt}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-08T23:07:59.157774" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-08T23:07:59.157774" level="INFO">${test_status} = False</msg>
<var>${test_status}</var>
<arg>${FALSE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-08T23:07:59.157774" elapsed="0.000000"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Execute Close Wifi Test">
<kw name="Open Application With Click" owner="Integration">
<msg time="2025-05-08T23:08:22.873691" level="INFO">üìå Liste des applications d√©tect√©es : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualit√©s', 'Home Assistant', 'Local Media Player', 'Maps', 'Param√®tres', 'Play\xa0Store', 'Prime Video', 'SMS']
üìå First Home Page d√©tect√©e : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualit√©s', 'Home Assistant', 'Local Media Player', 'Maps', 'Param√®tres', 'Play\xa0Store', 'Prime Video', 'SMS']

üìå Liste des applications d√©tect√©es : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualit√©s', 'Home Assistant', 'Local Media Player', 'Maps', 'Param√®tres', 'Play\xa0Store', 'Prime Video', 'SMS']
‚úÖ Retour √† la first home page !

üìå Liste des applications d√©tect√©es : ['Agenda', 'Appium Settings', 'ARD Audiothek', 'Audio Bluetooth', 'Crunchyroll', 'Enregistreur vocal', 'Google Assistant', 'Google\xa0Actualit√©s', 'Home Assistant', 'Local Media Player', 'Maps', 'Param√®tres', 'Play\xa0Store', 'Prime Video', 'SMS']
378 619 522 657</msg>
<msg time="2025-05-08T23:08:22.873691" level="INFO">${resultat} = True</msg>
<var>${resultat}</var>
<arg>${driver}</arg>
<arg>${LANG_DICT.Setting}</arg>
<status status="PASS" start="2025-05-08T23:07:59.158777" elapsed="23.714914"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-08T23:08:23.373836" level="INFO">Slept 500 milliseconds.</msg>
<arg>${QUICK_WAIT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-08T23:08:22.873691" elapsed="0.500145"/>
</kw>
<kw name="Check Element Exists By Id" owner="Integration">
<msg time="2025-05-08T23:08:23.805130" level="INFO">${Verfier} = True</msg>
<var>${Verfier}</var>
<arg>${driver}</arg>
<arg>${Setting_xpath_id}</arg>
<doc>V√©rifie si un √©l√©ment existe en utilisant son ID.</doc>
<status status="PASS" start="2025-05-08T23:08:23.373836" elapsed="0.431294"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${Verfier}</arg>
<arg>Settings screen is not displayed</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-05-08T23:08:23.805130" elapsed="0.000000"/>
</kw>
<kw name="Clique Sur Setting" owner="Integration">
<msg time="2025-05-08T23:08:25.054453" level="INFO">(0, 76, 550, 696)
‚úÖ 'R√©seau et Internet' trouv√© sans swipe. Appui en cours...</msg>
<arg>${driver}</arg>
<arg>${LANG_DICT.ReseauMenu}</arg>
<arg>${Setting_menu}</arg>
<status status="PASS" start="2025-05-08T23:08:23.805130" elapsed="1.249323"/>
</kw>
<kw name="Desactiver Wifi Si Active" owner="Integration">
<msg time="2025-05-08T23:08:26.560442" level="INFO">true</msg>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-08T23:08:25.054453" elapsed="1.506989"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2025-05-08T23:08:28.561821" level="INFO">Slept 2 seconds.</msg>
<arg>${WAIT_TIME}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2025-05-08T23:08:26.561442" elapsed="2.000379"/>
</kw>
<kw name="Is Active Wifi Ui" owner="Integration">
<msg time="2025-05-08T23:08:29.417945" level="INFO">√âtat actuel du Wi-Fi : false</msg>
<msg time="2025-05-08T23:08:29.417945" level="INFO">${verifier_wifi_ui} = False</msg>
<var>${verifier_wifi_ui}</var>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-08T23:08:28.561821" elapsed="0.856124"/>
</kw>
<kw name="Should Not Be True" owner="BuiltIn">
<arg>${verifier_wifi_ui}</arg>
<arg>WiFi is still active in UI</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" start="2025-05-08T23:08:29.417945" elapsed="0.001004"/>
</kw>
<kw name="Is Wifi Enabled Adb" owner="Integration">
<msg time="2025-05-08T23:08:29.743514" level="INFO">‚ùå Le Wi-Fi est d√©sactiv√©.</msg>
<msg time="2025-05-08T23:08:29.743514" level="INFO">${verfier_wifi_adb} = False</msg>
<var>${verfier_wifi_adb}</var>
<arg>${driver}</arg>
<status status="PASS" start="2025-05-08T23:08:29.418949" elapsed="0.324565"/>
</kw>
<kw name="Should Not Be True" owner="BuiltIn">
<arg>${verfier_wifi_adb}</arg>
<arg>WiFi is still active via ADB</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" start="2025-05-08T23:08:29.743514" elapsed="0.000000"/>
</kw>
<doc>Tests WiFi deactivation</doc>
<status status="PASS" start="2025-05-08T23:07:59.158777" elapsed="30.584737"/>
</kw>
<msg time="2025-05-08T23:08:29.744516" level="INFO">${test_status} = True</msg>
<var>${test_status}</var>
<arg>${test_keyword}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-05-08T23:07:59.158777" elapsed="30.585739"/>
</kw>
<if>
<branch type="IF" condition="${test_status}">
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-08T23:08:29.744516" level="INFO">Test Test Fermer Wifi r√©ussi</msg>
<arg>Test ${test_name} r√©ussi</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</kw>
<kw name="Exit For Loop" owner="BuiltIn">
<msg time="2025-05-08T23:08:29.744516" level="INFO">Exiting for loop altogether.</msg>
<doc>Stops executing the enclosing FOR loop.</doc>
<status status="PASS" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Evaluate" owner="BuiltIn">
<var>${attempt}</var>
<arg>${attempt} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${attempt} &lt;= ${MAX_RETRIES}">
<kw name="Log" owner="BuiltIn">
<arg>Test ${test_name} √©chou√© - Tentative ${attempt}/${MAX_RETRIES}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>${RETRY_DELAY}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2025-05-08T23:08:29.744516" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-08T23:08:29.744516" elapsed="0.001000"/>
</if>
<var name="${index}">0</var>
<status status="PASS" start="2025-05-08T23:07:59.157774" elapsed="30.587742"/>
</iter>
<var>${index}</var>
<value>${MAX_RETRIES}</value>
<status status="PASS" start="2025-05-08T23:07:59.157774" elapsed="30.587742"/>
</for>
<if>
<branch type="IF" condition="not ${test_status}">
<kw name="Fail" owner="BuiltIn">
<arg>Le test ${test_name} a √©chou√© apr√®s ${MAX_RETRIES} tentatives</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-05-08T23:08:29.745516" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-08T23:08:29.745516" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-08T23:08:29.745516" elapsed="0.000000"/>
</if>
<arg>Execute Close Wifi Test</arg>
<arg>Test Fermer Wifi</arg>
<status status="PASS" start="2025-05-08T23:07:59.157774" elapsed="30.587742"/>
</kw>
<doc>Teste la d√©sactivation du WiFi
- Ouvre les param√®tres
- D√©sactive le WiFi
- V√©rifie la d√©sactivation via UI et ADB</doc>
<tag>smoke</tag>
<tag>wifi</tag>
<status status="PASS" start="2025-05-08T23:07:59.156792" elapsed="30.588724"/>
</test>
<kw name="Fermer Driver" type="TEARDOWN">
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Get Source" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2025-05-08T23:08:29.746516" level="FAIL">No application is open</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="FAIL" start="2025-05-08T23:08:29.746516" elapsed="0.002000">No application is open</status>
</kw>
<msg time="2025-05-08T23:08:29.749515" level="WARN">Keyword 'Capture Page Screenshot' could not be run on failure: No application is open</msg>
<msg time="2025-05-08T23:08:29.749515" level="FAIL">No application is open</msg>
<doc>Returns the entire source of the current page.</doc>
<status status="FAIL" start="2025-05-08T23:08:29.746516" elapsed="0.002999">No application is open</status>
</kw>
<msg time="2025-05-08T23:08:29.749515" level="INFO">${session_active} = False</msg>
<var>${session_active}</var>
<arg>Get Source</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2025-05-08T23:08:29.746516" elapsed="0.002999"/>
</kw>
<if>
<branch type="IF" condition="${session_active}">
<kw name="Close Driver" owner="Integration">
<arg>${driver}</arg>
<doc>Ferme proprement le driver Appium.</doc>
<status status="NOT RUN" start="2025-05-08T23:08:29.750517" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>Driver ferm√© avec succ√®s</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-08T23:08:29.750517" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-08T23:08:29.749515" elapsed="0.001002"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-08T23:08:29.750517" level="INFO">Le driver n'√©tait pas actif</msg>
<arg>Le driver n'√©tait pas actif</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-08T23:08:29.750517" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-05-08T23:08:29.750517" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-08T23:08:29.749515" elapsed="0.001002"/>
</if>
<status status="PASS" start="2025-05-08T23:08:29.746516" elapsed="0.004001"/>
</branch>
<branch type="EXCEPT" assign="${error}">
<kw name="Log" owner="BuiltIn">
<arg>Erreur lors de la fermeture du driver: ${error}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-05-08T23:08:29.750517" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2025-05-08T23:08:29.750517" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2025-05-08T23:08:29.746516" elapsed="0.004001"/>
</try>
<doc>Cleans up and closes the test driver</doc>
<status status="PASS" start="2025-05-08T23:08:29.745516" elapsed="0.005001"/>
</kw>
<doc>Tests de connectivit√© WiFi pour appareil Android
- Activation du WiFi
- D√©sactivation du WiFi
- V√©rification de l'√©tat via UI et ADB
- Prend en charge les interfaces en fran√ßais et en anglais</doc>
<status status="PASS" start="2025-05-08T23:07:19.021231" elapsed="70.730284"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">smoke</stat>
<stat pass="2" fail="0" skip="0">wifi</stat>
</tag>
<suite>
<stat name="WiFiAndConnectivite" id="s1" pass="2" fail="0" skip="0">WiFiAndConnectivite</stat>
</suite>
</statistics>
<errors>
<msg time="2025-05-08T23:08:29.749515" level="WARN">Keyword 'Capture Page Screenshot' could not be run on failure: No application is open</msg>
</errors>
</robot>
